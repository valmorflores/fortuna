#line 1 "C:\CLIP53\INCLUDE\COMMON.CH"
#line 3 "SWPDVSIS.PRG"
#line 1 "C:\CLIP53\INCLUDE\INKEY.CH"
#line 4 "SWPDVSIS.PRG"
#line 1 "COMANDOS.CH"
#line 5 "SWPDVSIS.PRG"
#line 1 "VPF.CH"
#line 7 "SWPDVSIS.PRG"





































































Function Sistema(cVersao)

   Local lFim := .F., lCupomPendente := .F., lVersaoConflito:= .F.
   Local nHandProd, nHandDisp, nHandInfo, nhandLogo


   IF File( "PDV_PEND.VPB" )
      lCupomPendente := .T.
      __Run( "Del *.NTX" )
      VendaFile( 2 )
   ENDIF


   MReset()
   MSetWin( 10, 10, 1340, 990 )
   MCurOn()
   MCurOff()

   setbkfill(0)
   boxfill(0, 0, 1350, 1000, 20, 0)
   i:= 1
   adirectory:= {}
   adirectory:= directory("*.BMP")
   boxfill(0, 0, 1350, 1000, 0, 0)

   PicRead( 000, 000, 129, "FUNDO.BMP"    )
   PicRead( 782, 055, 001, "LOGOTIPO.BMP" )

   IF (CorPadrao == "CINZA")
      BoxFill( 10, 5, 1332, 30, 0, 03 )
   ELSE
      BoxFill( 10, 5, 1332, 30, 0, 07 )
   ENDIF

   LoadcSet( 0, "VSYS14.PTX" )

   SayString(    2,  3, 4, 0, 15, "  [      ] Aux  [   ] Quant  [   ] Canc  [        ] Venda  [   ] Cliente  [   ] Cond  [   ] Fecha")

   SayString(   44,  4, 4, 0,  0, "Home" )
   SayString(  232,  4, 4, 0,  0, "F1" )
   SayString(  406,  4, 4, 0,  0, "F4" )
   SayString(  577,  4, 4, 0,  0, "ENTER" )
   SayString(  816,  4, 4, 0,  0, "F8" )
   SayString( 1012,  4, 4, 0,  0, "F7" )
   SayString( 1175,  4, 4, 0,  0, "F6" )

   SayString(   42,  3, 4, 0, 14, "Home" )
   SayString(  230,  3, 4, 0, 14, "F1" )
   SayString(  404,  3, 4, 0, 14, "F4" )
   SayString(  575,  3, 4, 0, 14, "ENTER" )
   SayString(  814,  3, 4, 0, 14, "F8" )
   SayString( 1010,  3, 4, 0, 14, "F7" )
   SayString( 1173,  3, 4, 0, 14, "F6" )

   IF (CorPadrao == "CINZA")
      BoxFill( 25, 910, 1298,  72, 128, 3 )
   ELSE
      BoxFill( 25, 910, 1298,  72, 128, 1 )
   ENDIF

   nHandProd:= SnapCopy(  20, 900, 1300, 980, 0 )
   nHandDisp:= SnapCopy( 400, 500,  740, 880, 0 )
   nHandInfo:= SnapCopy( 220,  75,  740, 250, 0 )
   nHandLogo:= SnapCopy( 600, 450, 1350, 960, 0 )

   WHILE !LastKey()==27 .AND. lFim == .F.
      IF !File( "PDV_PEND.VPB" )
         VendaFile( 6 )
      ENDIF
      VendaFile( 2 )

      SnapPaste( 220,  75, nHandInfo )
      SnapPaste( 20,  900, nHandProd )
      SnapPaste( 400, 500, nHandDisp )
      SnapPaste( 600, 450, nHandLogo )

      LoadcSet( 0, "AGSYSA14.PTX" )
      SayString( 1140, 580, 4, 0, 0, cVersao ) 

      Browse( @lFim, @lCupomPendente, @lVersaoConflito, @cVersao, nHandInfo, nHandProd, nHandDisp, nHandLogo )

      DBCloseAll()

   ENDDO

   Return 0














Function Browse(lFim, lCupomPendente, lVersaoConflito, cVersao, nHandInfo, nHandProd, nHandDisp, nHandLogo )

  Local TECLA, nTotal:= 0, cTelaRes, nSave, lSubTotal:= .F., nUltReg:= -1
  Local oTab
  Local cObserv1:= Space( 60 ), cObserv2:= Space( 60 )
  Local lCancelaItem:= .F., nDescPercentual:= 0, nDescValor:= 0, nQuantidade:= 1
  Local cFontBrowse:= "VSYS14.PTX"
  Local lPrinter:= .T.
  Local nForma:= 0
  Local nCt
  Local GetList:= {}




  Local nVendedor:= 0, nCliCodigo:= 0, cCliDescri:= Space( 45 ), cCliEndere:= Space( 35 ), cCliCidade:= Space( 30 ), cCliBairro:= Space( 25 ), cCliEstado:= Space( 2 ),  cCliCodCep:= Space( 8 ), cCliCGCCPF:= Space( 14 )



  Local nBanco:= 0, aParcelas:= {}, nValorPagar:= 0, nPerAcrDes:= 0, nVlrAcrDes:= 0, cAcrDes:= "D", nVezes:= 0, nPrazo:= 0, nParcela:= 0, nPercentual:= 0, dVencimento:= DATE(), dPagamento:= CTOD( "  /  /  " ), cCheque:= Space( 15 ), nLocal := 0
  Local nStatusAnt:= 1









  Local nStatus:= 1, aStatus:= { "Em Consulta", "Cupom Fiscal", "Cancelamento Cupom", "Cancelamento Item", "Fechamento", "Cliente", "Condicoes", "Preco Diferenciado", "Desconto Produto", "Consulta Produto" }
  Local nUltimaQuantidade:= 0
  Local cBusca:= "", lVerPreco := .F., lAchou := .T.
  Local nSalLimCre:= 0, lLimCredAvis := .F.

  Local nTamEAN := 0, nCorEAN := 0, nRegAtuEAN := 0,  nRegAtuCli := 0, cForma := ""




  Priv nPgtDin:=0, nPgtTic:=0, nPgtChq:=0, nPgtCar:=0, nPgtPra:=0,  nPgtOut:=0, nTroco := 0,  cPgtDin:= Space( 40 ), cPgtTic:= Space( 40 ), cPgtCar:= Space( 40 ),  cPgtChq:= Space( 40 ), cPgtOut:= Space( 40 ), cPgtPra:= Space( 40 )


  IF MReset() > 0

  ENDIF

   IF (CorPadrao == "CINZA")

      SetRGBDac(   7,  192, 192, 192 )
      SetRGBDac(  15,  220, 220, 205 )
      SetRGBDac(  73,  192, 192, 192 )
      SetRGBDac(  88,  220, 220, 205 )
   ELSE

      SetRGBDac(   1,   48,   0, 152 ) 
      SetRGBDac(   7,    0, 152, 248 ) 
      SetRGBDac(   8,    0,  48,  96 ) 
      SetRGBDac(  13,   18,  96, 200 ) 
      SetRGBDac(  15,  152, 200, 248 ) 
      SetRGBDac(  63,    0,  48,  96 ) 
      SetRGBDac(  73,    0, 152, 248 ) 
      SetRGBDac(  88,  152, 200, 248 ) 
      SetRGBDac( 177,    0,  48,  96 ) 
   ENDIF

  SetColor( "00/07, 07/08" )


  IF File( DiretorioDeDados-"\PDVEAN__.VPB" )
      DBSelectAr( 20 )
      dbUseArea( .F., "DBFNTX", "&DiretoriodeDados\PDVEAN__.VPB", "EAN", if(.T. .OR. .F., !.F., NIL), .F. )

      IF !File( DiretorioDeDados-"\EANIND01.IGD" ) .OR.  !File( DiretorioDeDados-"\EANIND02.IGD" )
         __Run( 'File( DiretorioDeDados-"\EANIND03.IGD" )' )


         ordCondSet(,,,, {|| .T. },, RECNO(),,,, ) ; ordCreate("&DiretorioDeDados\EANIND01.IGD", "EANX1", "CODIGO", {|| CODIGO}, )



         ordCondSet(,,,, {|| .T. },, RECNO(),,,, ) ; ordCreate("&DiretorioDeDados\EANIND02.IGD", "EANX2", "CODEAN + CODPRO + STR (PCPCLA, 3) + STR (PCPTAM, 2) +  STR (PCPCOR, 3)", {|| CODEAN + CODPRO + STR (PCPCLA, 3) + STR (PCPTAM, 2) +  STR (PCPCOR, 3)}, )



         ordCondSet(,,,, {|| .T. },, RECNO(),,,, ) ; ordCreate("&DiretorioDeDados\EANIND03.IGD", "EANX3", "CODPRO + STR (PCPCLA, 3) + STR (PCPTAM, 2) +  STR (PCPCOR, 3)", {|| CODPRO + STR (PCPCLA, 3) + STR (PCPTAM, 2) +  STR (PCPCOR, 3)}, )
      ENDIF


      if !.F. ; ordListClear() ; end; ordListAdd( "&DiretorioDeDados\EANIND01.IGD" ); ordListAdd( "&DiretorioDeDados\EANIND02.IGD" ); ordListAdd( "&DiretorioDeDados\EANIND03.IGD" )
   ELSE







       SWGAviso( "ACESSO POR CODIGO DE BARRAS EAN", {{0, " "}, {0, "   O arquivo de Correspondencias EAN nao consta no diretorio !"}, {0, " "}, {0, "   Inclua o arquivo PDVEAN__.VPB no diretorio de dados do"}, {0, "        Fortuna"}, {0, "   Acione qualquer tecla para encerrar o PDV"},  {0, " "}}, 7, 4)
       Settext()
       fFim ()
       __QUIT ()
   ENDIF


   IF File( DiretorioDeDados-"\TABPRECO.VPB" )
       DBSelectAr( 25 )
       dbUseArea( .F., "DBFNTX", "&DiretorioDeDados\TABPRECO.VPB", "PRE", if(.T. .OR. .F., !.F., NIL), .F. )
       if !.F. ; ordListClear() ; end; ordListAdd( "&DiretorioDeDados\TPRIND01.IGD" ); ordListAdd( "&DiretorioDeDados\TPRIND02.IGD" )
       DBGoTop()
   ENDIF


   IF File( DiretorioDeDados-"\TABAUX__.VPB" )
       DBSelectAr( 26 )
       dbUseArea( .F., "DBFNTX", "&DiretorioDeDados\TABAUX__.VPB", "TAX", if(.T. .OR. .F., !.F., NIL), .F. )
       if !.F. ; ordListClear() ; end; ordListAdd( "&DiretorioDeDados\TAXIND01.IGD" ); ordListAdd( "&DiretorioDeDados\TAXIND02.IGD" )
       DBGoTop()
   ENDIF


   IF File( DiretorioDeDados-"\CORES___.VPB" )
       DBSelectAr( 21 )
       dbUseArea( .F., "DBFNTX", "&DiretoriodeDados\CORES___.VPB", "COR", if(.T. .OR. .F., !.F., NIL), .F. )
       IF !File( DiretorioDeDados-"\CORIND01.IGD" )


          ordCondSet(,,,, {|| .T. },, RECNO(),,,, ) ; ordCreate("&DiretorioDeDados\CORIND01.IGD", "CORX1", "CODIGO", {|| CODIGO}, )
       ENDIF
       if !.F. ; ordListClear() ; end; ordListAdd( "&DiretorioDeDados\CORIND01.IGD" )
   ENDIF


   IF File( DiretorioDeDados-"\CLASSES_.VPB" )
       DBSelectAr( 22 )
       dbUseArea( .F., "DBFNTX", "&DiretoriodeDados\CLASSES_.VPB", "CLA", if(.T. .OR. .F., !.F., NIL), .F. )
       IF !File( DiretorioDeDados-"\CLAIND01.IGD" )


          ordCondSet(,,,, {|| .T. },, RECNO(),,,, ) ; ordCreate("&DiretorioDeDados\CLAIND01.IGD", "CLAX1", "CODIGO", {|| CODIGO}, )
       ENDIF
       if !.F. ; ordListClear() ; end; ordListAdd( "&DiretorioDeDados\CLAIND01.IGD" )
   ENDIF


   IF File( DiretorioDeDados-"\CLIENTES.VPB" )
       DBSelectAr( 13 )
       AbreFile( 13 )
   ENDIF


  IF File( DiretorioDeDados-"\CDMPRIMA.VPB" )
      DBSelectAr( 10 )
      dbUseArea( .F., "DBFNTX", "&DiretorioDeDados\CDMPRIMA.VPB", "MPR", if(.T. .OR. .F., !.F., NIL), .F. )


      IF File( DiretorioDeDados-"\MPRIND01.IGD" ) .AND. File( DiretorioDeDados-"\MPRIND02.IGD" ) .AND. File( DiretorioDeDados-"\MPRIND03.IGD" ) .AND. File( DiretorioDeDados-"\MPRIND04.IGD" ) .AND. File( DiretorioDeDados-"\MPRIND05.IGD" )

         if !.F. ; ordListClear() ; end; ordListAdd( "&DiretorioDeDados\MPRIND01.IGD" ); ordListAdd( "&DiretorioDeDados\MPRIND02.IGD" ); ordListAdd( "&DiretorioDeDados\MPRIND03.IGD" ); ordListAdd( "&DiretorioDeDados\MPRIND04.IGD" ); ordListAdd( "&DiretorioDeDados\MPRIND05.IGD" )

      ELSEIF File( DiretorioDeDados-"\MPRIND01.IGD" ) .AND. File( DiretorioDeDados-"\MPRIND02.IGD" ) .AND. File( DiretorioDeDados-"\MPRIND03.IGD" ) .AND. File( DiretorioDeDados-"\MPRIND04.IGD" )
         if !.F. ; ordListClear() ; end; ordListAdd( "&DiretorioDeDados\MPRIND01.IGD" ); ordListAdd( "&DiretorioDeDados\MPRIND02.IGD" ); ordListAdd( "&DiretorioDeDados\MPRIND03.IGD" ); ordListAdd( "&DiretorioDeDados\MPRIND04.IGD" )

      ELSEIF File( DiretorioDeDados-"\MPRIND01.IGD" ) .AND. File( DiretorioDeDados-"\MPRIND02.IGD" ) .AND. File( DiretorioDeDados-"\MPRIND03.IGD" )
         if !.F. ; ordListClear() ; end; ordListAdd( "&DiretorioDeDados\MPRIND01.IGD" ); ordListAdd( "&DiretorioDeDados\MPRIND02.IGD" ); ordListAdd( "&DiretorioDeDados\MPRIND03.IGD" )
      ELSEIF File( DiretorioDeDados-"\MPRIND01.IGD" ) .AND. File( DiretorioDeDados-"\MPRIND02.IGD" )
         if !.F. ; ordListClear() ; end; ordListAdd( "&DiretorioDeDados\MPRIND01.IGD" ); ordListAdd( "&DiretorioDeDados\MPRIND02.IGD" )
      ENDIF
  ELSE







      SWGAviso( "ARQUIVO DE MATERIAS PRIMAS", {{0, " "}, {0, "   O arquivo de Materias Primas nao consta no diretorio !"}, {0, " "}, {0, "   Inclua o arquivo CDMPRIMA.VPB no diretorio de dados do"}, {0, "        Fortuna"}, {0, "   Acione qualquer tecla para encerrar o PDV"},  {0, " "}}, 7, 4)
      Settext()
      fFim ()
      __QUIT ()
  ENDIF





  PicWrite( 0, 0, 740, 900, 1, "PDV_LEF.$$$" )
  LoadcSet( 0, cFontBrowse )
  SetColor( "08/07,00/07" )

  DBSelectAr( 10 )
  oTAB:=tbrowseDB(19,02,24,43)
  oTAB:addcolumn(tbcolumnnew(,{|| PAD( " " + Left( MPR->DESCRI, 39 ), 45 ) }))
  oTAB:AUTOLITE:=.F.
  oTAB:dehilite()
  lDelimiters:= Set( 33, .F. )

  mSetWin( 5, 5, 1280, 1000 )
  mFixPos( 6, 6 )
  loadcSet( 0, "AGSYSD10.PTX" )

  SayString( 35, 820, 4, 0, 0, "Codigo Fabrica . . . . . . . . . . . . ." )
  SayString( 35, 780, 4, 0, 0, "Unidade de Medida . . . . . . . . . . " )
  SayString( 35, 740, 4, 0, 0, "Quantidade  . . . . . . . . . . . . . . ." )
  SayString( 35, 700, 4, 0, 0, "Origem/Fabricante  . . . . . . . . . . " )
  SayString( 35, 660, 4, 0, 0, "Saldo em Estoque . . . . . . . . . . . "  )
  SayString( 35, 620, 4, 0, 0, "Status . . . . . . . . . . . . . . . . . . . "  )
  SayString( 35, 580, 4, 0, 0, "Cliente  . . . . . . . . . . . . . . . . . . "  )

  loadcSet( 0, "VSYS14.PTX" )
  SayString( 35, 500, 4, 0, 0, "Total" )


  loadcSet( 0, "AGSYSD10.PTX" )
  SayString( 35, 125, 4, 0, 0, "Ordenacao        " )
  SayString( 35, 100, 4, 0, 0, "Busca            " )
  SayString( 35, 075, 4, 0, 0, "Codigo Interno   " )

  DBSelectAr( 123 )

  loadcSet( 0, cFontBrowse )
  IF LastRec() > 0
     IF nStatus == 1
        FOR nCt:= 1 TO 10
            DispCupom( " ", 0, .F.)
        NEXT
     ENDIF
     DBGoTop()
     NumeroCupom( RIGHT( StrZero( VDA->NUMCUP, 9, 0 ), 6 ) )
     DispCupom( "/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\", 0, .T.)
     DispCupom( " ", 0)
     DispCupom( "  . . .  C O N T I N U A C A O", 0)
     DispCupom( " ", 0)
     DispCupom( "VENDA FOI INICIADA AS " + VDA->HORA__ + "Hs.", 0 )
     DispCupom( "Cupom Fiscal No. " + NumeroCupom(), 0 )
     DispCupom( "Produto                                               Preco", 5)
     DispCupom( "======================================= ==========", 0)
     WHILE !EOF()
        IF STATUS==" " .OR. STATUS=="X"
           nTotal:= nTotal + PRECOT
           DispCupom( Left( VDA->DESCRI, 31), 4 )
           DispValor( Tran( VDA->PRECOV, "@E 999,999.99"), 4 )
        ELSEIF STATUS=="E"
           nTotal:= nTotal - PRECOT
           DispCupom( Left( VDA->DESCRI, 31), 5 )
           DispValor( Tran( VDA->PRECOV, "@E 999,999.99"), 5 )
        ENDIF
        DBSkip()
     ENDDO
     lSubTotal:= .T.
     nStatus:= 2
  ENDIF


  cAcrDes:= "D"
  nPerAcrDes:= 0
  nVlrAcrDes:= 0

  DBSelectAr( 10 )
  MPR->( DBSetOrder( 2 ) ) 
  MPR->( DBGotop( ) )

  WHILE .T.
      loadcSet( 0, cFontBrowse )
      IF LastKey()==24
         cBusca:= ""; lAchou := .T.
         BoxFill( 35, 446, 700, 4, 0, 7 )
         oTab:RefreshAll()
         WHILE !oTab:Stabilize()
         ENDDO


      ELSE
         SnapPaste( 220,  75, nHandInfo )
         SayString( 250, 125, 4, 0, 1, PAD( Alltrim( STR( MPR->( INDEXORD() ) ) ), 20 ) )
         SayString( 250, 100, 4, 0, 1, PAD( cBusca, 28 ) )
      ENDIF
      oTAB:colorrect({oTAB:ROWPOS,1,oTAB:ROWPOS,1},{2,1})
      WHILE nextkey()==0 .AND. ! oTAB:stabilize()
      ENDDO



      DO CASE
         CASE oTab:ROWPOS==1;  BoxFill( 35, 422, 700, 27, 20 + 32, 12 )
         CASE oTab:ROWPOS==2;  BoxFill( 35, 394, 700, 27, 20 + 32, 12 )
         CASE oTab:ROWPOS==3;  BoxFill( 35, 365, 700, 27, 20 + 32, 12 )
         CASE oTab:ROWPOS==4;  BoxFill( 35, 336, 700, 27, 20 + 32, 12 )
         CASE oTab:ROWPOS==5;  BoxFill( 35, 306, 700, 27, 20 + 32, 12 )
         CASE oTab:ROWPOS==6;  BoxFill( 35, 277, 700, 27, 20 + 32, 12 )
      ENDCASE

      IF !nUltReg==RECNO() .OR. lSubTotal

         SnapPaste( 20,  900, nHandProd )

         loadcSet( 0, "RMN1914.PTX" )

         SayString( 37, 915, 4, 0, 00, MPR->DESCRI )
         SayString( 34, 920, 4, 0, 14, MPR->DESCRI )

         SnapPaste( 400, 500, nHandDisp )
         LoadCSet( 0, "VSYS14.PTX" )

         SayString( 400, 820, 4, 0, IF( EMPTY( MPR->CODFAB ), 15, 1 ), IIF (EMPTY (MPR -> CODFAB) = .F., MPR -> CODFAB, "~~"))
         SayString( 400, 780, 4, 0, IF( EMPTY( MPR->UNIDAD ), 15, 1 ), IIF (EMPTY (MPR -> UNIDAD) = .F., MPR -> UNIDAD, "~~" ))
         SayString( 400, 740, 4, 0, IF( EMPTY( nQuantidade ), 15, 1 ), IIF (EMPTY (nQuantidade) = .F., Alltrim( Tran( nQuantidade, "@E 999,999.999" ) ), "~~"))
         SayString( 400, 700, 4, 0, IF( EMPTY( MPR->ORIGEM ), 15, 1 ), IIF (EMPTY (MPR->ORIGEM) = .F., MPR->ORIGEM, "~~"))
         SayString( 400, 660, 4, 0, IF( EMPTY( MPR->SALDO_ ), 15, 1 ), IIF (EMPTY (MPR->SALDO_) = .F., Alltrim( Str( MPR->SALDO_ ) ), "~~"))

         SnapPaste( 220,  75, nHandInfo )
         SayString( 250, 125, 4, 0, 1, PAD( Alltrim( STR( MPR->( INDEXORD() ) ) ), 20 ) )
         SayString( 250, 100, 4, 0, 1, PAD( cBusca, 28 ) )
         SayString( 250, 075, 4, 0, 1, PAD( ALLTRIM( MPR->INDICE ) + "-" + ALLTRIM( STR( PrecoConvertido() ) ) + "00", 40 ) )



         SayString( 400, 580, 4, 0, IF( EMPTY( cCliDescri ), 15, 1 ),  IIF (EMPTY (cCliDescri) = .F.,  LEFT (Alltrim( cCliDescri ), 18) + " ...", "~~"))

         IF nStatus==10
            SayString( 400, 620, 4, 0, 2, aStatus[ nStatus ] )
         ELSE
            SayString( 400, 620, 4, 0, IF( nStatus==4, 4, 1 ), aStatus[ nStatus ] )
         ENDIF

         nUltReg:= RECNO()
      ENDIF
      IF lSubTotal
         LoadcSet( 0, "DGE1609.PTX" )
         IF nStatus==10
            SayString( 400, 500, 4, 0, 08, Alltrim( Tran( PrecoConvertido(), "@E 999,999.99" ) ) )
            SayString( 400, 502, 4, 0, 03, Alltrim( Tran( PrecoConvertido(), "@E 999,999.99" ) ) )
         ELSE
            SayString( 400, 500, 4, 0, 7, Alltrim( Tran( nTotal, "@E 999,999.99" ) ) )
            SayString( 400, 502, 4, 0, 1, Alltrim( Tran( nTotal, "@E 999,999.99" ) ) )
         ENDIF

      ENDIF



      IF (lVersaoConflito == .T.)
         lVersaoConflito := .F.







         SWGAviso( "VERSAO DO PROGRAMA", {{0, "   Conflito de versoes !"}, {0, " "}, {1, "         Versao do programa = " + ALLTRIM (cVersao)} , {1, "         Versao do PDV.INI    = " + ALLTRIM (Versao)} , {0, " "}, {0, "   Acione qualquer tecla para continuar no PDV"},  {0, " "}}, 7, 4)
      ENDIF


      nSegundos:= SECONDS()
      WHILE ( nTecla:=Inkey() )==0 


         IF SECONDS() - nSegundos > 60 * ProtecaoTela
            aDirImagem:= DIRECTORY( "IMAGEM\*.BMP" )
            nTeclaRes:= 0
            nSaveScreen:= SWSnapCopy( 0, 0, 1350, 1000, 0, "PDVSCR.$$$" )
            cCorRes:= SetColor( "00/00" )
            SetGMode( 257 )
            SetHires( 0 )
            WHILE nTeclaRes==0
                FOR nCt:= 1 TO Len( aDirImagem )
                    PicRead( 000, 000, 129, "\" + CURDIR() + "\IMAGEM\" + aDirImagem[ nCt ][ 1 ] )
                    IF !( nTeclaRes:= Inkey( 3 ) ) == 0
                       EXIT
                    ENDIF
                NEXT
            ENDDO
            SetGMode( 257 )
            SetHires( 0 )
            SWSnapPaste( 0, 0, nSaveScreen )
            SWSnapKill( nSaveScreen )
            SetColor( cCorRes )
            nSegundos:= SECONDS()
         ENDIF
         nRegiao:= 1
         nBotao:= MStatus()
         IF MMotion() <> 0


         ENDIF
         IF nRegiao > 0
            IF nBotao==1
               __Keyboard( Chr( 5 ) + Chr( 0 ) )
            ELSEIF nBotao==2
               __Keyboard( Chr( 24 ) + Chr( 0 ) )
            ENDIF
         ENDIF
      ENDDO


      DO CASE
         CASE nTecla==27
            cBusca:= ""; lAchou := .T.
            IF (!nStatus == 2)







               SWGAviso( "FINALIZACAO DO PDV", {{0, " "}, {0, "   O Sistema sera FINALIZADO !"}, {0, " "}, {0, "   Para confirmar, acione a tecla [ESC], novamente"}, {0, " "}, {0, "   Para continuar a rotina normal, acione qualquer tecla"},  {0, " "}}, 7, 4)
               IF (LASTKEY () == 27)
                  nOpcao:= 0
                  IF nTotal == 0
                     VendaFile( 4 )
                  ENDIF
                  nTecla := 0
                  lFim:= .T.
                  EXIT
               ENDIF
            ELSE







               SWGAviso( "FINALIZACAO DO PDV", {{0, " "}, {0, "   O Sistema sera FINALIZADO com um Cupom Pendente !"}, {0, " "}, {0, "   Para Sair Pressione [ENTER]"}, {0, " "}, {0, "   Para continuar a rotina normal, acione qualquer tecla"}, {0, " "}}, 7, 4)
               IF ( LASTKEY () == 13 )
                  nOpcao:= 0
                  IF nTotal == 0
                     VendaFile( 4 )
                  ENDIF
                  nTecla := 0
                  lFim:= .T.
                  EXIT
               ENDIF
            ENDIF
            nTecla:= 0
            __Keyboard()
         CASE nTecla==9
            nTecla:= 0
            lFim:= .T.
            nOpcao:= 0
            IF nTotal == 0
               VendaFile( 4 )
            ENDIF
            __Keyboard()
            EXIT

         CASE nTecla==8 .OR. nTecla==19 .OR. nTecla==4
            IF (EMPTY (cBusca) == .F.)
               cBusca := LEFT (cBusca, LEN (cBusca) - 1)
               LoadcSet( 0, "VSYS14.PTX" )
               SayString( 250, 100, 4, 0, 1, PAD( cBusca, 29 ) )
            ENDIF
         CASE nTecla==5         ;oTAB:up();cBusca:= ""; lAchou := .T.
         CASE nTecla==24       ;oTAB:down();cBusca:= ""; lAchou := .T.
         CASE nTecla==18       ;oTAB:pageup();cBusca:= ""; lAchou := .T.
         CASE nTecla==31  ;oTAB:gotop() ;cBusca:= ""; lAchou := .T.
         CASE nTecla==3       ;oTAB:pagedown();cBusca:= ""; lAchou := .T.
         CASE nTecla==30  ;oTAB:gobottom();cBusca:= ""; lAchou := .T.
         CASE nTecla==-26;cBusca:= ""; lAchou := .T.
              DispCupom( "/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\", 0, .T.)
              DispCupom( " ", 0)
              DispCupom( " ", 0)
              DispCupom( "Cupom Fiscal No. " + NumeroCupom( ), 0 )
              DispCupom( "Produto                                               Preco", 5)
              DispCupom( "======================================= ==========", 0)

         CASE nTecla==13 


               IF !cBusca==""

                  IF Left( MPR->DESCRI, LEN( ALLTRIM( cBusca ) ) )==UPPER( Alltrim( cBusca ) ) .AND. !Left( cBusca, 1 ) $ "01234567890"

                     cBusca:= ""
                  ELSE
                     IF (fVerifBusca (@cBusca, @nRegAtuEAN, @oTab) == .F.)
                        cBusca:= ""
                        __Keyboard()
                        LOOP
                     ENDIF
                     IF !( cBusca == "" ) .AND. !LEFT( cBusca, 1 ) $ "01234567890"
                        IF !( cBusca == "" )
                           IF !( Left( MPR->DESCRI, Len( Alltrim( cBusca ) ) )==Alltrim( cBusca ) )
                              cBusca:= ""; lAchou := .T.
                              DispCupom( "Pesquisa NAO COMPLETADA !", 2 )
                              LOOP
                           ENDIF
                        ENDIF
                        IF (lAchou == .F.)
                           cBusca:= ""; lAchou := .T.
                           DispCupom( "Pesquisa NAO COMPLETADA !", 2 )
                           LOOP
                        ENDIF
                     ELSEIF Left( cBusca, 1 ) $ "01234567890"
                        IF !MPR->CODFAB == PAD( cBusca, LEN( MPR->CODFAB ) ) .OR. MPR->( EOF() )
                           DispCupom( "Codigo EAN Inexistente!", 2 )
                           cBusca:= ""; lAchou:= .T.
                           LOOP
                        ENDIF
                     ENDIF
                  ENDIF
               ENDIF
               cBusca:= ""
               IF MPR->( EOF() )
                  LOOP
               ENDIF

               IF nStatus==1 .OR. nStatus==2 .OR. nStatus==8 .OR. nStatus==9
                  IF nStatus == 1
                     FOR nCt:= 1 TO 10
                         DispCupom( " ", 0, .F.)
                     NEXT
                  ENDIF

                  LoadcSet( 0, "VSYS14.PTX" )


                  IF (fVerLimCred (@lLimCredAvis, @nCliCodigo, @nTotal,  @nSalLimCre) == .F.)
                     IF !nStatus==10
                        nStatus:= 2
                     ENDIF
                     LOOP
                  ENDIF

                  IF (MPR->PCPCSN=="S")
                     EAN -> (DBSetOrder (3)) 
                     EAN -> (DBSeek (MPR -> INDICE, .T.))
                     IF (EAN -> CODPRO == MPR -> INDICE)
                        nCorEAN:= fCorEAN()
                     ELSE
                        nCorEAN:= 0
                     ENDIF
                  ELSE
                     nCorEAN:= 0
                  ENDIF

                  IF (LASTKEY () == 27)
                     IF !nStatus==10
                        nStatus:= 2
                     ENDIF
                     LOOP
                  ENDIF

                  IF (MPR->PCPCLA > 0)
                     EAN -> (DBSetOrder (3)) 
                     EAN -> (DBSeek (MPR -> INDICE, .T.))
                     IF (EAN -> CODPRO == MPR -> INDICE)
                        nTamEan:= fTamEAN(@nCorEAN)
                     ELSE
                        nTamEAN:= 0
                     ENDIF
                  ELSE
                     nTamEAN:= 0
                  ENDIF

                  IF (LASTKEY () == 27)
                     IF !nStatus==10
                        nStatus:= 2
                     ENDIF
                     LOOP
                  ENDIF

                  IF (AvisaSaldoEst == "SIM")

                     IF (fVerSalEst (@nQuantidade, @nTamEAN, @nCorEAN,  @nRegAtuEAN) == .F.)
                        IF !nStatus==10
                           nStatus:= 2
                        ENDIF
                        LOOP
                     ENDIF
                  ENDIF


                  IF nStatus==8 .OR. MPR->( PrecoConvertido() ) <= 0

                     nPreco:= MPR->( PrecoConvertido() )
                     cCorRes:= SetColor( "08/15,14/01" )

                     nSaveF2:= SWSnapCopy( 50, 100, 1280, 950, 0, "PDV_F2__.$$$" )
                     loadcSet( 0, "VSYS14.PTX" )
                     SWGBox( 220, 490, 670, 720, "Preco do Item" , 15 )
                     BoxFill( 400, 590, 210, 40, 20 + 32, 0 )
                     cCorRes:= SetColor( "08/15,01/15" )

                     Mensagem()
                     DevPos( 13, 15 ) ; DevOut( "Preco" )

                     SetPos( 13, 25 ) ; AAdd( GetList, _GET_( nPreco, "nPreco", "@E 999,999.99", {|| nPreco > 0}, {|| Mensagem( "Digite o Preco do item" )} ):display() ); ATail(GetList):CapRow := 13 ; ATail(GetList):CapCol := 25 - __CapLength( "" ) + 1 ; ATail(GetList):Display()

                     SetCursor( 1 )
                     ReadModal(GetList, NIL,,,,,) ; GetList := {}
                     SetCursor( 0 )

                     SetColor( cCorRes )
                     SWSnapPaste( 50, 100, nSaveF2 )
                     SWSnapKill( nSaveF2 )
                     IF (LASTKEY () = 27)
                        IF !nStatus==10
                           nStatus:= 2
                        ENDIF
                        LOOP
                     ENDIF
                  ELSE
                     nPreco:= MPR->( PrecoConvertido() )
                  ENDIF

                  cTabela:= STPadrao
                  IF Left( MPR->INDICE, 3 ) == GrupoServico
                     cTabela:= STServico
                  ELSEIF MPR->TABRED == "  "
                     IF MPR->IPICOD == 4
                        cTabela:= STIsento
                     ELSEIF MPR->IPICOD == 1 .OR. MPR->IPICOD == 3
                        cTabela:= STSubstituicao
                     ELSE
                        cTabela:= STPadrao
                     ENDIF
                  ELSE
                     cTabela:= MPR->TABRED
                  ENDIF
                  IF nStatus == 1 .OR. VendaFile( 10 ) <= 0
                     IF lPrinter
                        ImpAbreCupom()
                     ENDIF
                     NumeroCupom( "<Buscar>" )
                     DispCupom( "/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\", 0, .T.)
                     DispCupom( " ", 0)
                     DispCupom( " ", 0)
                     DispCupom( "VENDA INICIADA AS " + TIME() + "Hs.", 0 )
                     DispCupom( "Cupom Fiscal No. " + NumeroCupom( ), 0 )
                     DispCupom( "Produto                                               Preco", 5)
                     DispCupom( "======================================= ==========", 0)
                  ENDIF

                  nPrecoFinal:= ( nPreco * nQuantidade )
                  IF nStatus==9

                     IF !nDescPercentual == 0
                        nPrecoFinal:= ( nPreco * nQuantidade )

                        nPrecoFinal:= ( nPrecoFinal ) - ROUND( ROUND( nDescPercentual * nPrecoFinal, 2 ) / 100, 2 )
                     ELSEIF !nDescValor == 0
                        nPrecoFinal:= ( nPreco * nQuantidade ) - nDescValor
                     ELSE
                        nPrecoFinal:= ( nPreco * nQuantidade )
                     ENDIF
                  ENDIF

                  lRetorno:= .F.
                  cTabela:= PAD( ALLTRIM( cTabela ), 2 )
                  IF lPrinter








                     lRetorno:= impVendeProduto( MPR->CODFAB, Left( MPR->DESCRI, 30 ), cTabela, nQuantidade, nPreco, IF( nStatus==9, nDescPercentual, 0 ), IF( nStatus==9, nDescValor, 0 ), VDA->( LastRec() ), MPR->UNIDAD )
                  ENDIF
                  IF lRetorno .OR. Impressora=="Nenhuma"

                     VendaFile( 7, nPrecoFinal, nQuantidade,  cTabela, @nTamEAN, @nCorEAN )
                     lCancelaItem:= .F.
                     nDescPercentual:= 0
                     nDescValor:= 0
                     DispCupom( Left( MPR->DESCRI, 31), 4 )
                     DispValor( Tran( nPrecoFinal, "@E 999,999.99"), 4 )
                     nTotal:= nTotal + nPrecoFinal
                  ELSE
                     DispCupom( "**** FALHA NA VENDA DESTE PRODUTO ****", 13 )
                  ENDIF
               ELSEIF nStatus==4
                  IF VendaFile( 5, MPR->INDICE )
                     nPrecoFinal:= VendaFile( 8 )[ 9 ]
                     VendaFile( 9, MPR->INDICE )
                     IF lPrinter
                        impCancItem( VendaFile( 8 )[ 1 ] )
                     ENDIF
                     nTotal-= nPrecoFinal
                     DispCupom( MPR->DESCRI, 5 )
                     lCancelaItem:= .F.
                  ELSE
                     DispCupom( "** ITEM SELECIONADO NAO CONSTA NA LISTA VENDIDA **", 5 )
                     lCancelaItem:= .F.
                  ENDIF
               ENDIF
               nDescPercentual := 0
               nDescValor := 0
               nQuantidade:= 1
               lSubTotal:= .T.
               IF !nStatus==10
                  nStatus:= 2
               ENDIF
               LoadcSet( 0, cFontBrowse )

         CASE nTecla==-3
              cBusca:= ""; lAchou := .T.
              IF nStatus == 2 .OR. nStatus == 4
                 lCancelaItem:= IF( lCancelaItem, .F., .T. )
                 nStatus:= IF( lCancelaItem, 4, 2 )
                 lSubTotal:= .T.
              ENDIF

         CASE nTecla==10
              MudaTabela()


         CASE nTecla==-41
              cBusca:= ""; lAchou := .T.
              IF nStatus == 2 .OR. nStatus == 1 .OR. nStatus == 8
                 IF !( nStatus==8 )
                    nStatusAnt:= nStatus
                 ENDIF
                 nStatus:= IF( nStatus==8, nStatusAnt, 8 )
                 lSubTotal:= .T.
              ENDIF

         CASE nTecla==-7 .AND. nStatus==2
              cBusca:= ""; lAchou := .T.

              nSaveF8:= SWSnapCopy( 50, 100, 1280, 950, 0, "PDV_F8__.$$$" )
              loadcSet( 0, "VSYS14.PTX" )
              SWGBox( 220, 220, 1250, 800, "Cadastro de Clientes", 15 )

              BoxFill( 415, 680, 770, 40, 20 + 32, 0 )
              BoxFill( 415, 622, 620, 40, 20 + 32, 0 )
              BoxFill( 415, 562, 450, 40, 20 + 32, 0 )
              BoxFill( 415, 505, 520, 40, 20 + 32, 0 )
              BoxFill( 415, 445, 050, 40, 20 + 32, 0 )
              BoxFill( 415, 387, 150, 40, 20 + 32, 0 )
              BoxFill( 415, 327, 315, 40, 20 + 32, 0 )

              cCorRes:= SetColor( "08/15,01/15" )
              Mensagem()




              DevPos( 10, 15 ) ; DevOut( "Cliente  " ) ; SetPos( Row(), Col()+1 ) ; AAdd( GetList, _GET_( cCliDescri, "cCliDescri",, {||BuscaCli( @nCliCodigo, @cCliDescri, @cCliEndere,  @cCliBairro,  @cCliCidade,  @cCliEstado,  @cCliCodCep,  @cCliCGCCPF, GetList )}, {||Mensagem( "Digite o Nome do cliente" )} ):display() ); ATail(GetList):CapRow := Row() ; ATail(GetList):CapCol := Col()+1 - __CapLength( "" ) + 1 ; ATail(GetList):Display()

              DevPos( 12, 15 ) ; DevOut( "Endereco " ) ; SetPos( Row(), Col()+1 ) ; AAdd( GetList, _GET_( cCliEndere, "cCliEndere",,, {||Mensagem( "Digite o Endereco do Cliente" )} ):display() ); ATail(GetList):CapRow := Row() ; ATail(GetList):CapCol := Col()+1 - __CapLength( "" ) + 1 ; ATail(GetList):Display()

              DevPos( 14, 15 ) ; DevOut( "Bairro   " ) ; SetPos( Row(), Col()+1 ) ; AAdd( GetList, _GET_( cCliBairro, "cCliBairro",,, {||Mensagem( "Digite o Bairro do cliente" )} ):display() ); ATail(GetList):CapRow := Row() ; ATail(GetList):CapCol := Col()+1 - __CapLength( "" ) + 1 ; ATail(GetList):Display()

              DevPos( 16, 15 ) ; DevOut( "Cidade   " ) ; SetPos( Row(), Col()+1 ) ; AAdd( GetList, _GET_( cCliCidade, "cCliCidade",,, {||Mensagem( "Digite a Cidade do cliente" )} ):display() ); ATail(GetList):CapRow := Row() ; ATail(GetList):CapCol := Col()+1 - __CapLength( "" ) + 1 ; ATail(GetList):Display()

              DevPos( 18, 15 ) ; DevOut( "Estado   " ) ; SetPos( Row(), Col()+1 ) ; AAdd( GetList, _GET_( cCliEstado, "cCliEstado",,, {||Mensagem( "Digite o Estado  do cliente" )} ):display() ); ATail(GetList):CapRow := Row() ; ATail(GetList):CapCol := Col()+1 - __CapLength( "" ) + 1 ; ATail(GetList):Display()

              DevPos( 20, 15 ) ; DevOut( "CEP      " ) ; SetPos( Row(), Col()+1 ) ; AAdd( GetList, _GET_( cCliCodCep, "cCliCodCep",,, {||Mensagem( "Digite o Cep do cliente" )} ):display() ); ATail(GetList):CapRow := Row() ; ATail(GetList):CapCol := Col()+1 - __CapLength( "" ) + 1 ; ATail(GetList):Display()

              DevPos( 22, 15 ) ; DevOut( "CGC/CPF  " ) ; SetPos( Row(), Col()+1 ) ; AAdd( GetList, _GET_( cCliCgcCpf, "cCliCgcCpf",,, {||Mensagem( "Digite o CFG/CPF do cliente" )} ):display() ); ATail(GetList):CapRow := Row() ; ATail(GetList):CapCol := Col()+1 - __CapLength( "" ) + 1 ; ATail(GetList):Display()

              SetCursor( 1 )
              ReadModal(GetList, NIL,,,,,) ; GetList := {}
              SetCursor( 0 )

              SetColor( cCorRes )
              SWSnapPaste( 50, 100, nSaveF8 )
              SWSnapKill( nSaveF8 )


              DbSelectAr( 13 )
              IF Alltrim( CLI->DESCRI )==Alltrim( cCliDescri ) .AND. !EMPTY( cCliDescri )
                 nCliCodigo:= CLI->CODIGO
                 nSalLimCre := CLI -> SALDO_ - nTotal
                 DispCupom( "Cliente ATIVADO !", 2 )
                 nRegAtuCli := CLI -> (RECNO ())
              ELSEIF !( LastKey()==27 )





                 SWGAviso( "CADASTRO DE CLIENTES", {{0, " "}, {0, "   O cliente digitado nao consta no cadastro!"}, {0, " "}, {0, "   Acione a tecla [TAB] para inclui-lo no cadastro" }, {0, " "}}, 7, 4)
                 IF LastKey()==9
                    nOrdRes:= IndexOrd()
                    CLI->( DBSetOrder( 1 ) )
                    CLI->( DBSeek( 999999 ) )
                    CLI->( DBSkip(-1) )
                    nCliCodigo:= CLI->CODIGO + 1
                    CLI->( DBAppend() )
                    CLI->( RLock() )
                    IF !( CLI->( NetErr() ) )






                       _FIELD->CLI->CODIGO := nCliCodigo; _FIELD->CLI->DESCRI := cCliDescri; _FIELD->CLI->ENDERE := cCliEndere; _FIELD->CLI->BAIRRO := cCliBairro; _FIELD->CLI->CIDADE := cCliCidade; _FIELD->CLI->ESTADO := cCliEstado; _FIELD->CLI->CODCEP := cCliCodCep ;IIF( FIELDPOS( "FILIAL" ) > 0, IF( _FIELD->FILIAL==0, _FIELD->FILIAL:= CodigoFilial, Nil ), Nil )
                        IF Len( Alltrim( ALLTRIM( cCliCGCCPF ) ) )==11
                           _FIELD->CLI->CPF___ := cCliCgcCpf ;IIF( FIELDPOS( "FILIAL" ) > 0, IF( _FIELD->FILIAL==0, _FIELD->FILIAL:= CodigoFilial, Nil ), Nil )
                        ELSE
                           _FIELD->CLI->CGCMF_ := cCliCgcCpf ;IIF( FIELDPOS( "FILIAL" ) > 0, IF( _FIELD->FILIAL==0, _FIELD->FILIAL:= CodigoFilial, Nil ), Nil )
                        ENDIF
                    ENDIF
                    DBSetOrder( nOrdRes )
                    DispCupom( "Cliente ATIVADO !", 2 )
                    nRegAtuCli:= CLI->( RECNO() )
                 ELSE
                    nCliCodigo:= 0
                    nRegAtuCli:= 0
                    DispCupom( "Cliente DESATIVADO !", 2 )
                 ENDIF
              ENDIF
              DBSelectAr( 10 )

         CASE nTecla==-40
              cBusca:= ""; lAchou := .T.

              nSaveF11:= SWSnapCopy( 50, 100, 1280, 950, 0, "PDV_F11_.$$$" )
              loadcSet( 0, "VSYS14.PTX" )
              cCorRes:= SetColor( "08/15,03/15" )
              SetColor( "08/15,01/15" )
              SWGBox( 135, 339, 1210, 550, "Observacoes no Cupom", 7 )

              Mensagem()
              SetPos( 18, 10 ) ; AAdd( GetList, _GET_( cObserv1, "cObserv1",,, {|| Mensagem( "Digite a Observacao que ira no Cupom" )} ):display() ); ATail(GetList):CapRow := 18 ; ATail(GetList):CapCol := 10 - __CapLength( "" ) + 1 ; ATail(GetList):Display()
              SetPos( 19, 10 ) ; AAdd( GetList, _GET_( cObserv2, "cObserv2",,, {|| Mensagem( "Digite a Observacao que ira no Cupom" )} ):display() ); ATail(GetList):CapRow := 19 ; ATail(GetList):CapCol := 10 - __CapLength( "" ) + 1 ; ATail(GetList):Display()

              SetCursor( 1 )
              ReadModal(GetList, NIL,,,,,) ; GetList := {}
              SetCursor( 0 )

              SetColor( cCorRes )
              SWSnapPaste( 50, 100, nSaveF11 )
              SWSnapKill( nSaveF11 )
              oTab:RefreshAll()
              WHILE !oTab:Stabilize()
              ENDDO

         CASE nTecla == -24
              cBusca:= ""; lAchou := .T.
              IF lPrinter
                 impSubTotCupom()
              ENDIF

         CASE (nTecla == -29)
              cBusca:= ""; lAchou := .T.
              IF VDA->( LASTREC() ) <= 0
                 IF FILE( "BAKUPULT.VPB" )







                    SWGAviso( "ANULACAO DO CUPOM FISCAL ( ANTERIOR )", {{0, " "}, {0, "   O ultimo Cupom Fiscal gravado sera Restaurado e em seguida"}, {0, "    anulado (Caixa/Estoque/Cupom/Receber) no sistema Fortuna. "}, {0, "                                                              "}, {0, "   Para confirmar pressione [F10]"}, {0, "   Para continuar a rotina normal, pressione qualquer tecla. "}, {0, " "}}, 7, 4)
                 ELSE







                    SWGAviso( "SEM REGISTRO ANTERIOR", {{0, " "}, {0, "   O ultimo Cupom Fiscal gravado nao esta registrado ou ja   "}, {0, "    foi cancelado anteriormente.                              "}, {0, "   Para tentar cancalar novamente pressione [F10]"}, {0, " "}, {0, "   Para continuar a rotina normal, pressione qualquer tecla."}, {0, " "}}, 7, 4)
                 ENDIF
              ELSE







                 SWGAviso( "ANULACAO DO CUPOM FISCAL ATUAL", {{0, " "}, {0, "   O Cupom Fiscal que esta sendo impresso sera cancelado." }, {0, "                                                  "}, {0, "   Para confirmar pressione [F10]"}, {0, " "}, {0, "   Para continuar a rotina normal, peressione qualquer tecla"}, {0, " "}}, 7, 4)
              ENDIF
              IF (LASTKEY()==-29 .OR. LASTKEY()==-9)
                 IF !VDA->( LASTREC() ) > 0
                    VDA->( DBCloseArea() )
                    VendaFile( 4 )
                    VendaFile( 12 )
                    Ferase( "BAKUPULT.VPB" )
                    VendaFile( 2 )
                    DBSelectAr( 123 )
                    loadcSet( 0, cFontBrowse )
                    IF LastRec() > 0
                       IF nStatus == 1
                          FOR nCt:= 1 TO 10
                              DispCupom( " ", 0, .F.)
                          NEXT
                       ENDIF
                       nTotal:= 0
                       NumeroCupom( Right( StrZero( VDA->NUMCUP, 9, 0 ), 6 ) )
                       DBGoTop()
                       DispCupom( "/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\", 0, .T.)
                       DispCupom( " ", 0)
                       DispCupom( "CUPOM FISCAL RESTAURADO",  0)
                       DispCupom( " ", 0)
                       DispCupom( "VENDA FOI INICIADA AS " + VDA->HORA__ + "Hs.", 0 )
                       DispCupom( "Cupom Fiscal No. " + NumeroCupom(), 0 )
                       DispCupom( "Produto                                               Preco", 5)
                       DispCupom( "======================================= ==========", 0)
                       WHILE !EOF()
                          IF STATUS==" " .OR. STATUS=="X"
                             nTotal:= nTotal + PRECOT
                             DispCupom( Left( VDA->DESCRI, 31), 4 )
                             DispValor( Tran( VDA->PRECOV, "@E 999,999.99"), 4 )
                          ELSEIF STATUS=="E"
                             nTotal:= nTotal - PRECOT
                             DispCupom( Left( VDA->DESCRI, 31), 5 )
                             DispValor( Tran( VDA->PRECOV, "@E 999,999.99"), 5 )
                          ENDIF
                          DBSkip()
                       ENDDO
                       INKEY( 2 )
                       lSubTotal:= .T.
                       nStatus:= 2
                       CancelaCaixa( nTotal )
                       CancelaReceber( NumeroCupom() )
                    ENDIF
                    DBSelectAr( 10 )
                    MPR->( DBSetOrder( 2 ) )
                    MPR->( DBGotop( ) )
                    AnulaCupom( impCupomAtual(), nTotal )
                 ENDIF
                 IF lPrinter
                    ImpCancCupom()
                 ENDIF
                 VendaFile( 4 )
                 VendaFile( 6 )
                 VendaFile( 2 )
                 DispCupom( "Cupom ANULADO!", 2 )
                 EXIT
              ENDIF

         CASE nTecla == -45 .AND. nStatus==2
              cBusca:= ""; lAchou := .T.







              SWGAviso( "LIMPEZA DO BUFFER DO CUPOM FISCAL (SEM IMPRESSAO)", {{0, " "}, {0, "   O Buffer do Cupom Fiscal sera LIMPO !"}, {0, " "}, {0, "   Para confirmar, acione as teclas [Ctrl+F12], novamente"}, {0, " "}, {0, "   Para continuar a rotina normal, acione qualquer tecla"},  {0, " "}}, 7, 4)

              IF (LASTKEY () == -45)
                 VendaFile( 4 )
                 VendaFile( 6 )
                 VendaFile( 2 )
                 nTotal:= 0
                 nSalLimCre := 0
                 EXIT

              ENDIF

         CASE nTecla == -2
              cBusca:= ""; lAchou := .T.
              nPreco:= MPR->( PrecoConvertido() )
              nSaveF3:= SWSnapCopy( 50, 100, 1280, 950, 0, "PDV_F3__.$$$" )
              loadcSet( 0, "VSYS14.PTX" )

              SWGBox( 220, 475, 660, 740, "Desconto Percentual/Valor" , 15 )
              BoxFill( 460, 620, 170, 40, 20 + 32, 0 )
              BoxFill( 460, 560, 170, 40, 20 + 32, 0 )

              cCorRes:= SetColor( "08/15,01/15" )
              nDescPercentual:= 0
              nDescValor:= 0
              DevPos( 12, 15 ) ; DevOut( "Desconto(%)" )
              DevPos( 14, 15 ) ; DevOut( "Valor      " )

              Mensagem()

              SetPos( 12, 28 ) ; AAdd( GetList, _GET_( nDescPercentual, "nDescPercentual", "   99.99%",, {|| Mensagem( "Digite o % de desconto" )} ):display() ); ATail(GetList):CapRow := 12 ; ATail(GetList):CapCol := 28 - __CapLength( "" ) + 1 ; ATail(GetList):Display()


              SetPos( 14, 28 ) ; AAdd( GetList, _GET_( nDescValor, "nDescValor", "@E 9,999.99",, {|| Mensagem( "Digite o Valor do desconto" ) .AND.  nDescPercentual == 0} ):display() ); ATail(GetList):CapRow := 14 ; ATail(GetList):CapCol := 28 - __CapLength( "" ) + 1 ; ATail(GetList):Display()

              SetCursor( 1 )
              ReadModal(GetList, NIL,,,,,) ; GetList := {}
              SetCursor( 0 )

              SetColor( cCorRes )
              SWSnapPaste( 50, 100, nSaveF3 )
              SWSnapKill( nSaveF3 )

              IF (nDescPercentual > 0 .OR. nDescValor > 0)
                 nStatus := 9
                 lSubTotal:= .T.
              ENDIF

         CASE nTecla == 28
              cBusca:= ""; lAchou := .T.
              nSaveF1:= SWSnapCopy( 50, 100, 1280, 950, 0, "PDV_F1__.$$$" )
              loadcSet( 0, "VSYS14.PTX" )

              SWGBox( 221, 489, 671, 720, "Quantidade" , 15 )
              BoxFill( 450, 590, 190, 40, 20 + 32, 0 )
              cCorRes:= SetColor( "08/15,01/15" )

              DevPos( 13, 15 ) ; DevOut( "Quantidade" )

              nTeclaRes:= Inkey( 0 )

              IF nTeclaRes == 28
                 nQuantidade:= nUltimaQuantidade
                 DevPos( 13, 28 ) ; DevOutPict( nQuantidade, "@E 99999.999" )
              ELSE
                 nQuantidade:= 0
                 __Keyboard( Chr( nTeclaRes ) )
              ENDIF

              Mensagem()


              SetPos( 13, 28 ) ; AAdd( GetList, _GET_( nQuantidade, "nQuantidade", "@E 99999.999", {|| nQuantidade > 0}, {|| Mensagem( "Digite a Quantidade" )} ):display() ); ATail(GetList):CapRow := 13 ; ATail(GetList):CapCol := 28 - __CapLength( "" ) + 1 ; ATail(GetList):Display()

              SetCursor( 1 )
              ReadModal(GetList, NIL,,,,,) ; GetList := {}
              SetCursor( 0 )

              nUltimaQuantidade:= nQuantidade
              lSubTotal:= .T.
              SWSnapPaste( 50, 100, nSaveF1 )
              SWSnapKill( nSaveF1 )
              SetColor( cCorRes )

         CASE nTecla == -6 .AND. nStatus==2
              cBusca:= ""; lAchou := .T.
              nSaveF7:= SWSnapCopy( 50, 100, 1320, 980, 0, "PDV_F7__.$$$" )
              loadcSet( 0, "VSYS14.PTX" )

              nBanco:= 0
              aParcelas:= 0
              aParcelas:= {}
              nValorPagar:= 0
              nPerAcrDes:= 0
              nVlrAcrDes:= 0
              cAcrDes:= "D"
              nVezes:= 0
              nBanco:= 0
              nLocal:= 0
              nPrazo:= 0
              nParcela:= 0
              nPercentual:= 0
              dVencimento:= DATE()
              dPagamento:= CTOD( "  /  /  " )
              cCheque:= Space( 15 )

              SWGBox( 220, 350,  995, 800, "Condicoes de Pagamento", 15 )

              BoxFill( 605, 680,  50, 40, 20 + 32, 0 )
              BoxFill( 605, 622, 145, 40, 20 + 32, 0 )
              BoxFill( 605, 562, 350, 40, 20 + 32, 0 )
              BoxFill( 605, 505, 350, 40, 20 + 32, 0 )
              BoxFill( 605, 445, 100, 40, 20 + 32, 0 )

              SetColor( "08/15,01/15" )
              DevPos( 10, 15 ) ; DevOut( "Acresc/Desc(A/D)   " )
              DevPos( 12, 15 ) ; DevOut( "Acresc/Desc(%)     " )
              DevPos( 14, 15 ) ; DevOut( "Acresc/Desc(R$)    " )
              DevPos( 16, 15 ) ; DevOut( "Total a Pagar      " )
              DevPos( 18, 15 ) ; DevOut( "Vendedor           " )

              Mensagem()

              AcrDes( cAcrDes, nPerAcrDes, @nVlrAcrDes, @nValorPagar, nTotal )







              SetPos( 10, 37 ) ; AAdd( GetList, _GET_( cAcrDes, "cAcrDes", "!", {|| cAcrDes $ "DA" .AND. AcrDes( cAcrDes, nPerAcrDes,  @nVlrAcrDes, @nValorPagar,  nTotal )}, {|| Mensagem( "Digite [A]Acrescimo [D]Desconto")} ):display() ); ATail(GetList):CapRow := 10 ; ATail(GetList):CapCol := 37 - __CapLength( "" ) + 1 ; ATail(GetList):Display()




              SetPos( 12, 36 ) ; AAdd( GetList, _GET_( nPerAcrDes, "nPerAcrDes", "@R  999.99%", {||  AcrDes( cAcrDes, nPerAcrDes, @nVlrAcrDes, @nValorPagar, nTotal )}, {||  Mensagem( "Digite o % de Acrescimo/Desconto" ) .AND. IF( nVlrAcrDes > 0, Pula(), .T. )} ):display() ); ATail(GetList):CapRow := 12 ; ATail(GetList):CapCol := 36 - __CapLength( "" ) + 1 ; ATail(GetList):Display()





              SetPos( 14, 36 ) ; AAdd( GetList, _GET_( nVlrAcrDes, "nVlrAcrDes", "@E    99,999,999,999.99", {||  ExibeTotais( "A Pagar ", nValorPagar ) .AND. AcrDes( cAcrDes, nPerAcrDes, @nVlrAcrDes, @nValorPagar, nTotal )}, {||  Mensagem( "Digite o Valor de Acrescimo/Desconto" ) .AND. IF( nPerAcrDes > 0, Pula(), .T. )} ):display() ); ATail(GetList):CapRow := 14 ; ATail(GetList):CapCol := 36 - __CapLength( "" ) + 1 ; ATail(GetList):Display()

              SetPos( 16, 36 ) ; AAdd( GetList, _GET_( nValorPagar, "nValorPagar", "@E    99,999,999,999.99",, {|| Mensagem( "Digite o Valor a pagar" )} ):display() ); ATail(GetList):CapRow := 16 ; ATail(GetList):CapCol := 36 - __CapLength( "" ) + 1 ; ATail(GetList):Display()

              SetPos( 18, 36 ) ; AAdd( GetList, _GET_( nVendedor, "nVendedor", "@R   999", {|| BuscaVendedor( @nVendedor )}, {|| Mensagem( "Digite o Codigo do vendedor" )} ):display() ); ATail(GetList):CapRow := 18 ; ATail(GetList):CapCol := 36 - __CapLength( "" ) + 1 ; ATail(GetList):Display()

              SetCursor( 1 )
              ReadModal(GetList, NIL,,,,,) ; GetList := {}
              SetCursor( 0 )

              SWSnapPaste( 50, 100, nSaveF7 )
              SWSnapKill( nSaveF7 )

              IF LastKey() == 27
                 LOOP
              ENDIF



              FormaPagamento( 10, 15, 23, 70, aParcelas, nValorPagar, @nVezes,  @nForma, @cForma )
              nTamPar := LEN (aParcelas)

              IF LastKey() == 27
                 LOOP
              ENDIF

              SWGBox ( 520, 490, 860, 720, "Parcelas", 15 )
              BoxFill( 740, 590,  70, 40, 20 + 32, 0 )

              cCorRes:= SetColor( "08/15,01/15" )
              Mensagem()
              DevPos( 13, 33 ) ; DevOut( "Parcelas" )

              SetPos( 13, 45 ) ; AAdd( GetList, _GET_( nVezes, "nVezes", "99", {|| LastKey()==13}, {|| Mensagem( "Numero de Vezes" )} ):display() ); ATail(GetList):CapRow := 13 ; ATail(GetList):CapCol := 45 - __CapLength( "" ) + 1 ; ATail(GetList):Display()

              SetCursor( 1 )
              ReadModal(GetList, NIL,,,,,) ; GetList := {}
              SetCursor( 0 )

              SWSnapPaste( 50, 100, nSaveF7 )

              IF LastKey() == 27
                 SWSnapKill( nSaveF7 )
                 LOOP
              ENDIF





              FOR nCt:= 1 TO nVezes

                  nParPerAcu := 0
                  nParValAcu := 0
                  IF (nCt > 1)
                     FOR J = 1 TO nCt - 1
                         nParPerAcu += aParcelas[ J ][ 1 ]
                         nParValAcu += aParcelas[ J ][ 3 ]
                     next
                  ENDIF
                  nParPerAnt := (100 - nParPerAcu) / (nVezes - nCt + 1)
                  nParValAnt := (nValorPagar - nParValAcu) / (nVezes - nCt + 1)

                  IF nCt <= nTamPar .OR. nCt <= LEN (aParcelas)
                     IF (LASTKEY () <> 18)
                        aParcelas[ nCt ][ 1 ] := nParPerAnt
                        aParcelas[ nCt ][ 3 ] := nParValAnt
                     ENDIF
                     nPercentual           := aParcelas[ nCt ][ 1 ]
                     nPrazo                := aParcelas[ nCt ][ 2 ]
                     nParcela              := aParcelas[ nCt ][ 3 ]
                     dVencimento           := aParcelas[ nCt ][ 4 ]
                     dPagamento            := aParcelas[ nCt ][ 5 ]
                     nBanco                := aParcelas[ nCt ][ 6 ]
                     cCheque               := aParcelas[ nCt ][ 7 ]
                     nLocal                := aParcelas[ nCt ][ 8 ]
                     lManual               := .F.
                  ELSE
                     nPercentual           := nParPerAnt
                     nPrazo                := 0
                     nParcela              := nParValAnt
                     dVencimento           := DATE()
                     dPagamento            := CTOD( "  /  /  " )
                     nBanco                := 0
                     cCheque               := Space( 15 )
                     nLocal                := 0
                  ENDIF



                  SWGBox( 220, 200, 820, 825, "Parcela " +  ALLTRIM( Str( nCt, 3, 0 ) ) + " de " +  ALLTRIM( Str( nVezes, 3, 0 ) ), 15 )
                  BoxFill( 510, 707, 142, 40, 20 + 32, 0 )
                  BoxFill( 510, 649, 210, 40, 20 + 32, 0 )
                  BoxFill( 510, 591,  80, 40, 20 + 32, 0 )
                  BoxFill( 510, 533, 160, 40, 20 + 32, 0 )
                  BoxFill( 510, 475, 160, 40, 20 + 32, 0 )
                  BoxFill( 510, 417,  80, 40, 20 + 32, 0 )
                  BoxFill( 510, 357, 280, 40, 20 + 32, 0 )
                  BoxFill( 510, 297,  80, 40, 20 + 32, 0 )
                  SetColor( "08/15,01/15" )

                  DevPos( 09, 15 ) ; DevOut( "Percentual " )
                  DevPos( 11, 15 ) ; DevOut( "Valor      " )
                  DevPos( 13, 15 ) ; DevOut( "Prazo/Dias " )
                  DevPos( 15, 15 ) ; DevOut( "Vencimento " )
                  DevPos( 17, 15 ) ; DevOut( "Pagamento  " )
                  DevPos( 19, 15 ) ; DevOut( "Banco      " )
                  DevPos( 21, 15 ) ; DevOut( "Cheque     " )
                  DevPos( 23, 15 ) ; DevOut( "Local      " )

                  Mensagem()

                  nPercAnt := nPercentual





                  SetPos( 09, 31 ) ; AAdd( GetList, _GET_( nPercentual, "nPercentual", "999.99%", {|| CalcParcela( nValorPagar, nPercentual, @nParcela,  lManual, @nPercAnt ) .AND. !LastKey()==27  .AND. nPercentual < (100 - (nVezes - nCt - 1) * 0.01 - nParPerAcu)}, {|| Mensagem( "Digite o Percentual da Parcela" )  .AND. nCt <> nVezes} ):display() ); ATail(GetList):CapRow := 09 ; ATail(GetList):CapCol := 31 - __CapLength( "" ) + 1 ; ATail(GetList):Display()







                  SetPos( 11, 31 ) ; AAdd( GetList, _GET_( nParcela, "nParcela", "@E 9999,999.99", {|| fCalcPerc (@nPercentual, @nValorPagar, @nParcela )  .AND. !LastKey()==27  .AND. nParcela < (nValorPagar - (nVezes - nCt - 1) * 0.01 - nParValAcu)}, {|| Mensagem( "Digite o Valor da Parcela" )  .AND. nCt <> nVezes  .AND. nPercAnt == nPercentual} ):display() ); ATail(GetList):CapRow := 11 ; ATail(GetList):CapCol := 31 - __CapLength( "" ) + 1 ; ATail(GetList):Display()




                  SetPos( 13, 31 ) ; AAdd( GetList, _GET_( nPrazo, "nPrazo", "999", {|| CalcVenc( DATE(), nPrazo, @dVencimento )  .AND. !LastKey()==27}, {|| Mensagem( "Digite o Prazo em dias" )} ):display() ); ATail(GetList):CapRow := 13 ; ATail(GetList):CapCol := 31 - __CapLength( "" ) + 1 ; ATail(GetList):Display()



                  SetPos( 15, 31 ) ; AAdd( GetList, _GET_( dVencimento, "dVencimento",, {|| !LastKey()==27}, {|| Mensagem( "Digite a Data de Vencimento" )} ):display() ); ATail(GetList):CapRow := 15 ; ATail(GetList):CapCol := 31 - __CapLength( "" ) + 1 ; ATail(GetList):Display()



                  SetPos( 17, 31 ) ; AAdd( GetList, _GET_( dPagamento, "dPagamento",, {|| !LastKey()==27}, {|| Mensagem( "Digite a Data de Quitacao" )} ):display() ); ATail(GetList):CapRow := 17 ; ATail(GetList):CapCol := 31 - __CapLength( "" ) + 1 ; ATail(GetList):Display()



                  SetPos( 19, 31 ) ; AAdd( GetList, _GET_( nBanco, "nBanco", "999", {|| !LastKey()==27}, {|| Mensagem( "Digite o Banco do Cheque" )} ):display() ); ATail(GetList):CapRow := 19 ; ATail(GetList):CapCol := 31 - __CapLength( "" ) + 1 ; ATail(GetList):Display()



                  SetPos( 21, 31 ) ; AAdd( GetList, _GET_( cCheque, "cCheque",, {|| !LastKey()==27}, {|| Mensagem( "Digite o Numero do Cheque" )} ):display() ); ATail(GetList):CapRow := 21 ; ATail(GetList):CapCol := 31 - __CapLength( "" ) + 1 ; ATail(GetList):Display()



                  SetPos( 23, 31 ) ; AAdd( GetList, _GET_( nLocal, "nLocal", "999", {|| !LastKey()==27}, {|| Mensagem( "Digite a Localizacao" )} ):display() ); ATail(GetList):CapRow := 23 ; ATail(GetList):CapCol := 31 - __CapLength( "" ) + 1 ; ATail(GetList):Display()

                  SetCursor( 1 )
                  ReadModal(GetList, NIL,,,,,) ; GetList := {}
                  SetCursor( 0 )

                  IF LastKey() == 27
                     aParcelas:= 0
                     aParcelas:= {}
                     EXIT
                  ENDIF

                  IF LastKey() == 18
                     nCt:= nCt - 2
                     IF nCt < 0
                        nCt:= 0
                     ENDIF
                  ELSE
                     IF nCt <= nTamPar
                        aParcelas[ nCt ][ 1 ]:= nPercentual
                        aParcelas[ nCt ][ 2 ]:= nPrazo
                        aParcelas[ nCt ][ 3 ]:= nParcela
                        aParcelas[ nCt ][ 4 ]:= dVencimento
                        aParcelas[ nCt ][ 5 ]:= dPagamento
                        aParcelas[ nCt ][ 6 ]:= nBanco
                        aParcelas[ nCt ][ 7 ]:= cCheque
                        aParcelas[ nCt ][ 8 ]:= nLocal
                     ELSE







                        AAdd( aParcelas, { nPercentual, nPrazo, nParcela, dVencimento, dPagamento, nBanco, cCheque, nLocal } )
                     ENDIF
                  ENDIF
              NEXT

              IF (LEN (aParcelas) > 0)
                 ASIZE( aParcelas, nVezes )
              ENDIF

              SWSnapPaste( 50, 100, nSaveF7 )
              SWSnapKill( nSaveF7 )
              DBSelectAr( 10 )
              oTab:RefreshAll()
              WHILE !oTaB:stabilize()
              ENDDO
              lDisplay:= .F.
              IF (LEN (aParcelas) > 0)
                 DispCupom( "Condicoes de Pagamento ATIVADA !", 2 )
                 DispCupom( "Cliente.: " + cCliDescri,              1 )
                 DispCupom( "Parcelas: " + StrZero( nVezes, 2, 0 ), 1 )
                 DispCupom( "Cupom Fiscal pode ser finalizado...",  1 )
              ELSE
                 DispCupom( "Condicoes de Pagamento CANCELADA !", 1 )
              ENDIF


         CASE nTecla == -5 .AND. nStatus==2
              cBusca:= ""; lAchou := .T.
              nValorPago:= 0
              nValorPagar:= 0
              nVezes:= 0

              loadcSet( 0, "VSYS14.PTX" )
              nSaveF6:= SWSnapCopy( 50, 100, 1320, 950, 0, "PDV_F6__.$$$" )

              IF Len( aParcelas ) > 0
                 CLI->( DBSetOrder( 1 ) )
                 CLI->( DBSeek( nCliCodigo ) )
                 nSalLimCre:= CLI->SALDO_ - nTotal
                 IF !fVerLimCred( @lLimCredAvis, @nCliCodigo, @nTotal, @nSalLimCre )
                 ENDIF
                 AcrDes( cAcrDes, nPerAcrDes, @nVlrAcrDes, @nValorPagar, nTotal )
              ELSEIF Len( aParcelas ) <= 0

                  IF (MoedasEspecificas == "NAO")


                     WHILE (.T.)

                       SWGBox( 220, 289,  950, 800, "Fechamento da Venda", 15 )

                       BoxFill( 555, 680,  65, 40, 20 + 32, 0 )
                       BoxFill( 555, 622, 145, 40, 20 + 32, 0 )
                       BoxFill( 555, 562, 365, 40, 20 + 32, 0 )
                       BoxFill( 555, 505, 365, 40, 20 + 32, 0 )
                       BoxFill( 555, 445, 365, 40, 20 + 32, 0 )
                       BoxFill( 555, 385, 115, 40, 20 + 32, 0 )

                       SetColor( "08/15,01/15" )

                       __Keyboard( Chr( 24 ) + Chr( 24 ) + Chr( 24 ) )
                       DevPos( 10, 15 ) ; DevOut( "Acresc/Desc(A/D) " )
                       DevPos( 12, 15 ) ; DevOut( "Acresc/Desc(%)   " )
                       DevPos( 14, 15 ) ; DevOut( "Acresc/Desc(R$)  " )
                       DevPos( 16, 15 ) ; DevOut( "Total a Pagar    " )
                       DevPos( 18, 15 ) ; DevOut( "Valor Pago       " )
                       DevPos( 20, 15 ) ; DevOut( "Vendedor         " )

                       Mensagem()





                       SetPos( 10, 34 ) ; AAdd( GetList, _GET_( cAcrDes, "cAcrDes", "!", {|| cAcrDes $ "D" .AND.  AcrDes( cAcrDes, nPerAcrDes, @nVlrAcrDes,  @nValorPagar, nTotal )}, {|| Mensagem( "Digite [A]Acrescimo/[D]Desconto" )} ):display() ); ATail(GetList):CapRow := 10 ; ATail(GetList):CapCol := 34 - __CapLength( "" ) + 1 ; ATail(GetList):Display()





                       SetPos( 12, 34 ) ; AAdd( GetList, _GET_( nPerAcrDes, "nPerAcrDes", "@R 999.99%", {|| AcrDes( cAcrDes, nPerAcrDes, @nVlrAcrDes, @nValorPagar, nTotal )}, {|| IF( nVlrAcrDes > 0, Pula(), .T. ) .AND.  Mensagem( "Digite o % Acrescimo/Desconto" )} ):display() ); ATail(GetList):CapRow := 12 ; ATail(GetList):CapCol := 34 - __CapLength( "" ) + 1 ; ATail(GetList):Display()






                       SetPos( 14, 33 ) ; AAdd( GetList, _GET_( nVlrAcrDes, "nVlrAcrDes", "@R    99,999,999,999.99", {|| ExibeTotais( "A Pagar ", nValorPagar ) .AND.  AcrDes( cAcrDes, nPerAcrDes, @nVlrAcrDes,  @nValorPagar, nTotal )}, {|| IF( nPerAcrDes > 0, Pula(), .T. ) .AND. Mensagem( "Valor Acrescimo/Desconto" )} ):display() ); ATail(GetList):CapRow := 14 ; ATail(GetList):CapCol := 33 - __CapLength( "" ) + 1 ; ATail(GetList):Display()




                       SetPos( 16, 33 ) ; AAdd( GetList, _GET_( nValorPagar, "nValorPagar", "@E    99,999,999,999.99",, {||Pula() .AND.  Mensagem( "Digite o Valor a Pagar" )} ):display() ); ATail(GetList):colorDisp("04/15"); ATail(GetList):CapRow := 16 ; ATail(GetList):CapCol := 33 - __CapLength( "" ) + 1 ; ATail(GetList):Display()




                       SetPos( 18, 33 ) ; AAdd( GetList, _GET_( nValorPago, "nValorPago", "@R    99,999,999,999.99", {|| INT( nValorPago ) >= INT( nValorPagar ) .OR.  LastKey() == 5}, {|| Mensagem( "Digite o Valor Pago" )} ):display() ); ATail(GetList):CapRow := 18 ; ATail(GetList):CapCol := 33 - __CapLength( "" ) + 1 ; ATail(GetList):Display()



                       SetPos( 20, 33 ) ; AAdd( GetList, _GET_( nVendedor, "nVendedor", "@R   999", {|| BuscaVendedor( @nVendedor )}, {|| Mensagem( "Digite o Codigo do Vendedor" )} ):display() ); ATail(GetList):CapRow := 20 ; ATail(GetList):CapCol := 33 - __CapLength( "" ) + 1 ; ATail(GetList):Display()

                       SetCursor( 1 )
                       ReadModal(GetList, NIL,,,,,) ; GetList := {}
                       SetCursor( 0 )

                       IF (AvisaValorPago == "SIM")

                          IF (LASTKEY () == 27 .OR.  fValorPago (@nValorPago, @nValorPagar) == .T.)
                             EXIT
                          ENDIF
                       ELSE
                          EXIT
                       ENDIF

                     END

                     SWSnapPaste( 50, 100, nSaveF6 )

                 ELSE



                     WHILE (.T.)

                       SWGBox( 220, 170,  950, 920, "Fechamento da Venda", 15 )

                       BoxFill( 555, 796,  65, 40, 20 + 32, 0 ) 
                       BoxFill( 805, 796, 115, 40, 20 + 32, 0 ) 
                       BoxFill( 555, 738, 365, 40, 20 + 32, 0 ) 
                       BoxFill( 555, 680, 365, 40, 20 + 32, 0 ) 

                       BoxFill( 555, 622, 365, 40, 20 + 32, 0 ) 
                       BoxFill( 555, 562, 365, 40, 20 + 32, 0 ) 
                       BoxFill( 555, 505, 365, 40, 20 + 32, 0 ) 
                       BoxFill( 555, 445, 365, 40, 20 + 32, 0 ) 
                       BoxFill( 555, 385, 365, 40, 20 + 32, 0 ) 

                       BoxFill( 285, 622, 255, 40, 20 + 32, 0 ) 
                       BoxFill( 285, 562, 255, 40, 20 + 32, 0 ) 
                       BoxFill( 285, 505, 255, 40, 20 + 32, 0 ) 
                       BoxFill( 285, 445, 255, 40, 20 + 32, 0 ) 
                       BoxFill( 285, 385, 255, 40, 20 + 32, 0 ) 

                       DevPos( 12, 15 ) ; DevOut( "", "14/15" ) 
                       DevPos( 14, 15 ) ; DevOut( "", "14/15" ) 
                       DevPos( 16, 15 ) ; DevOut( "", "14/15" ) 
                       DevPos( 18, 15 ) ; DevOut( "", "14/15" ) 
                       DevPos( 20, 15 ) ; DevOut( "", "14/15" ) 

                       BoxFill( 555, 325, 365, 40, 20 + 32, 0 ) 
                       BoxFill( 555, 265, 115, 40, 20 + 32, 0 ) 

                       SetColor( "08/15,01/15" )

                       __Keyboard( Chr( 24 ) + Chr( 24 ) + Chr( 24 ) )
                       DevPos( 06, 15 ) ; DevOut( "Acresc/Desc(A/D) " )
                       DevPos( 06, 41 ) ; DevOut( "Em(%)" )
                       DevPos( 08, 15 ) ; DevOut( "Acresc/Desc(R$)  " )
                       DevPos( 10, 15 ) ; DevOut( "Total a Pagar    " )

                       DevPos( 12, 18 ) ; DevOut( "Em Ticket's " ) 
                       DevPos( 14, 18 ) ; DevOut( "Em Cheque   " ) 
                       DevPos( 16, 18 ) ; DevOut( "Em Cartao   " ) 
                       DevPos( 18, 18 ) ; DevOut( "Em Outros   " ) 
                       DevPos( 20, 18 ) ; DevOut( "Em Dinheiro " ) 

                       DevPos( 22, 15 ) ; DevOut( "Troco            " )
                       DevPos( 24, 15 ) ; DevOut( "Vendedor         " )

                       nPgtDin := nValorPagar
                       DevPos( 20, 34 ) ; DevOutPict( nPgtDin, "@E    99,999,999,999.99" )

                       Mensagem()






                       SetPos( 06, 34 ) ; AAdd( GetList, _GET_( cAcrDes, "cAcrDes", "!", {|| cAcrDes $ "D" .AND.  AcrDes( cAcrDes, nPerAcrDes, @nVlrAcrDes,  @nValorPagar, nTotal ) .AND.  fPgtDin (@nValorPagar, GetList)}, {|| Mensagem( "Digite [A]Acrescimo/[D]Desconto" )} ):display() ); ATail(GetList):CapRow := 06 ; ATail(GetList):CapCol := 34 - __CapLength( "" ) + 1 ; ATail(GetList):Display()





                       SetPos( 06, 48 ) ; AAdd( GetList, _GET_( nPerAcrDes, "nPerAcrDes", "@R 999.99", {|| AcrDes( cAcrDes, nPerAcrDes, @nVlrAcrDes, @nValorPagar, nTotal ) .AND.  fPgtDin (@nValorPagar, GetList)}, {|| Mensagem( "Digite o % Acrescimo/Desconto" )} ):display() ); ATail(GetList):CapRow := 06 ; ATail(GetList):CapCol := 48 - __CapLength( "" ) + 1 ; ATail(GetList):Display()






                       SetPos( 08, 34 ) ; AAdd( GetList, _GET_( nVlrAcrDes, "nVlrAcrDes", "@R    99,999,999,999.99", {|| ExibeTotais( "A Pagar ", nValorPagar ) .AND.  AcrDes( cAcrDes, nPerAcrDes, @nVlrAcrDes,  @nValorPagar, nTotal ) .AND.  fPgtDin (@nValorPagar, GetList)}, {|| Mensagem( "Valor Acrescimo/Desconto" )} ):display() ); ATail(GetList):CapRow := 08 ; ATail(GetList):CapCol := 34 - __CapLength( "" ) + 1 ; ATail(GetList):Display()




                       SetPos( 10, 34 ) ; AAdd( GetList, _GET_( nValorPagar, "nValorPagar", "@E    99,999,999,999.99",, {||Pula() .AND.  Mensagem( "Digite o Valor a Pagar" )} ):display() ); ATail(GetList):colorDisp("04/15"); ATail(GetList):CapRow := 10 ; ATail(GetList):CapCol := 34 - __CapLength( "" ) + 1 ; ATail(GetList):Display()



                       SetPos( 12, 34 ) ; AAdd( GetList, _GET_( cPgtTic, "cPgtTic", "@KS20", {||fExiFor( cPgtTic, "nPgtTic" )}, {||Mensagem( "Digite o quanto sera pago em Ticket's" )} ):display() ); ATail(GetList):colorDisp("02/15"); ATail(GetList):CapRow := 12 ; ATail(GetList):CapCol := 34 - __CapLength( "" ) + 1 ; ATail(GetList):Display()


                       SetPos( 12, 34 ) ; AAdd( GetList, _GET_( nPgtTic, "nPgtTic", "@E    99,999,999,999.99", {|| fExiForNum( @cPgtTic, nPgtTic, GetList )  .AND. fPgtDin (@nValorPagar, GetList)}, ):display() ); ATail(GetList):CapRow := 12 ; ATail(GetList):CapCol := 34 - __CapLength( "" ) + 1 ; ATail(GetList):Display()



                       SetPos( 14, 34 ) ; AAdd( GetList, _GET_( cPgtChq, "cPgtChq", "@KS20", {||fExiFor( cPgtChq, "nPgtChq" )}, {||Mensagem( "Digite o quanto sera pago em Cheque" )} ):display() ); ATail(GetList):colorDisp("02/15"); ATail(GetList):CapRow := 14 ; ATail(GetList):CapCol := 34 - __CapLength( "" ) + 1 ; ATail(GetList):Display()


                       SetPos( 14, 34 ) ; AAdd( GetList, _GET_( nPgtChq, "nPgtChq", "@E    99,999,999,999.99", {|| fExiForNum( @cPgtChq, nPgtChq, GetList )  .AND. fPgtDin (@nValorPagar, GetList)}, ):display() ); ATail(GetList):CapRow := 14 ; ATail(GetList):CapCol := 34 - __CapLength( "" ) + 1 ; ATail(GetList):Display()



                       SetPos( 16, 34 ) ; AAdd( GetList, _GET_( cPgtCar, "cPgtCar", "@KS20", {||fExiFor( cPgtCar, "nPgtCar" )}, {||Mensagem( "Digite o quanto sera pago com Cartao" )} ):display() ); ATail(GetList):colorDisp("02/15"); ATail(GetList):CapRow := 16 ; ATail(GetList):CapCol := 34 - __CapLength( "" ) + 1 ; ATail(GetList):Display()


                       SetPos( 16, 34 ) ; AAdd( GetList, _GET_( nPgtCar, "nPgtCar", "@E    99,999,999,999.99", {|| fExiForNum( @cPgtCar, nPgtCar, GetList )  .AND. fPgtDin (@nValorPagar, GetList)}, ):display() ); ATail(GetList):CapRow := 16 ; ATail(GetList):CapCol := 34 - __CapLength( "" ) + 1 ; ATail(GetList):Display()



                       SetPos( 18, 34 ) ; AAdd( GetList, _GET_( cPgtOut, "cPgtOut", "@KS20", {||fExiFor( cPgtOut, "nPgtOut" )}, {||Mensagem( "Digite o quanto sera pago em Outros" )} ):display() ); ATail(GetList):colorDisp("02/15"); ATail(GetList):CapRow := 18 ; ATail(GetList):CapCol := 34 - __CapLength( "" ) + 1 ; ATail(GetList):Display() 


                       SetPos( 18, 34 ) ; AAdd( GetList, _GET_( nPgtOut, "nPgtOut", "@E    99,999,999,999.99", {|| fExiForNum( @cPgtOut, nPgtOut, GetList )  .AND. fPgtDin (@nValorPagar, GetList)}, ):display() ); ATail(GetList):CapRow := 18 ; ATail(GetList):CapCol := 34 - __CapLength( "" ) + 1 ; ATail(GetList):Display()


                       SetPos( 20, 34 ) ; AAdd( GetList, _GET_( cPgtDin, "cPgtDin", "@KS20", {||fExiFor( cPgtDin, "nPgtDin" )}, {||Mensagem( "Digite o quanto sera pago em Dinheiro" )} ):display() ); ATail(GetList):colorDisp("02/15"); ATail(GetList):CapRow := 20 ; ATail(GetList):CapCol := 34 - __CapLength( "" ) + 1 ; ATail(GetList):Display()





                       SetPos( 20, 34 ) ; AAdd( GetList, _GET_( nPgtDin, "nPgtDin", "@E    99,999,999,999.99", {|| LastKey() == 5 .OR.  nPgtDin + nPgtTic + nPgtChq + nPgtCar +  nPgtOut >= nValorPagar .AND.  fExiForNum( @cPgtDin, nPgtDin, GetList )  .AND. fTroco( @nValorPagar, @nValorPago)}, ):display() ); ATail(GetList):CapRow := 20 ; ATail(GetList):CapCol := 34 - __CapLength( "" ) + 1 ; ATail(GetList):Display()


                       SetPos( 24, 34 ) ; AAdd( GetList, _GET_( nVendedor, "nVendedor", "@R   999", {|| BuscaVendedor( @nVendedor )}, {|| Mensagem( "Digite o Codigo do Vendedor" )} ):display() ); ATail(GetList):CapRow := 24 ; ATail(GetList):CapCol := 34 - __CapLength( "" ) + 1 ; ATail(GetList):Display()

                       SetCursor( 1 )
                       ReadModal(GetList, NIL,,,,,) ; GetList := {}
                       SetCursor( 0 )

                       IF (AvisaValorPago == "SIM")

                          IF (LASTKEY () == 27 .OR.  fValorPago (@nValorPago, @nValorPagar) == .T.)
                             EXIT
                          ENDIF
                       ELSE
                          EXIT
                       ENDIF

                     END

                     SWSnapPaste( 50, 100, nSaveF6 )

                 ENDIF

              ENDIF

              IF !LastKey() == 27

                 IF lPrinter
                    ImpAbreGaveta()
                 ENDIF

                 aAviso:= {}
                 FOR nCt:= 1 TO Len( aParcelas )
                     nPercentual:= aParcelas[ nCt ][ 1 ]
                     nPrazo:=      aParcelas[ nCt ][ 2 ]
                     nParcela:=    aParcelas[ nCt ][ 3 ]
                     dVencimento:= aParcelas[ nCt ][ 4 ]
                     dPagamento:=  aParcelas[ nCt ][ 5 ]
                     nBanco:=      aParcelas[ nCt ][ 6 ]
                     cCheque:=     aParcelas[ nCt ][ 7 ]
                     nLocal:=      aParcelas[ nCt ][ 8 ]


                     AAdd( aAviso, {0, " " + Tran( nPercentual, "@E 999.99%" ) + Tran( nParcela, "@E 9,999,999.99" ) + " " + DTOC( dVencimento )}  )
                 NEXT

                 IF Len( aParcelas ) > 0
                    SWGAviso( "CONDICOES DE PAGAMENTO                                     [F10]Anula", aAviso, 7, 3 )
                 ENDIF

                  IF (LASTKEY () == 27)
                     LOOP
                  ENDIF





                 IF cAcrDes == "D"
                    IF nPerAcrDes > 0

                       nPerAcrDes:= nPerAcrDes * (1)
                    ELSEIF nVlrAcrDes > 0

                       nVlrAcrDes:= nVlrAcrDes * (1)
                    ENDIF
                 ENDIF



                 cMensagem:= ""
                 IF !EMPTY( cObserv1 )
                    cMensagem:= cMensagem + cObserv1 + Chr( 13 ) + Chr( 10 )
                 ENDIF
                 IF !EMPTY( cObserv2 )
                    cMensagem:= cMensagem + cObserv2 + Chr( 13 ) + Chr( 10 )
                 ENDIF
                 IF !EMPTY( cObserv3 )
                    cMensagem:= cMensagem + cObserv3 + Chr( 13 ) + Chr( 10 )
                 ENDIF
                 IF !EMPTY( cCliDescri )


                    cMensagem:= cMensagem + cCliDescri + Chr( 13 ) + Chr( 10 ) + cCliEndere + Chr( 13 ) + Chr( 10 ) + Alltrim( cCliCidade ) + "-" + cCliEstado + Chr( 13 ) + Chr( 10 )
                 ENDIF

                 cCrediario:= "Pagamento: A VISTA"
                 nCol:= 1
                 IF Len( aParcelas ) > 0 .AND. CarneInterno
                    cCrediario:= "       F O R M A   D E   P A G A M E N T O     " + Chr( 13 ) + Chr( 10 )
                    cCrediario:= cCrediario + "Pr---Vencim--Valor------Pr---Vencim--Valor-----" + Chr( 13 ) + Chr( 10 )
                    FOR nCt:= 1 TO Len( aParcelas )
                        cVlr:= Tran( aParcelas[ nCt ][ 3 ], "@E 999,999.99" )
                        cVenc:= DTOC( aParcelas[ nCt ][ 4 ] )
                        cP:= Str( aParcelas[ nCt ][ 2 ], 3, 0 )
                        cCrediario:= cCrediario + cP + " " + cVenc + " " + cVlr
                        IF nCol==2 .OR. nCt == Len( aParcelas )
                           cCrediario:= cCrediario + Chr( 13 ) + Chr( 10 )
                           nCol:= 0
                        ENDIF
                        nCol:= nCol + 1


                    NEXT
                    cCrediario:= cCrediario + "***-----------------*** ***-----------------***" + Chr( 13 ) + Chr( 10 )
                    cMensagem:= cMensagem + cCrediario
                 ELSEIF !CarneInterno
                    cCrediario:= ""
                    cCrediario:= cCrediario + "Pr---Vencim--------------------------VALOR-----" + Chr( 13 ) + Chr( 10 )
                    FOR nCt:= 1 TO Len( aParcelas )
                        cVlr:= Tran( aParcelas[ nCt ][ 3 ], "@E 999,999.99" )
                        cVenc:= DTOC( aParcelas[ nCt ][ 4 ] )
                        cP:= Str( aParcelas[ nCt ][ 2 ], 3, 0 )
                        cCrediario:= cCrediario + cP + " " + cVenc + "......................... " + cVlr + Chr( 13 ) + Chr( 10 )
                        FOR nLin:= 1 TO 5
                            cCrediario:= cCrediario + " " + Chr( 13 ) + Chr( 10 )
                        NEXT
                        nCol:= nCol + 1


                    NEXT

                 ENDIF
                 IF nPerAcrDes > 0 .AND. nVlrAcrDes==0
                    nVlrAcrDes:= ROUND( ( nTotal * nPerAcrDes ) / 100, 2 )
                    nPerAcrDes:= 0
                 ENDIF

                 IF lPrinter
                     IF (Impressora == "BEMATECH-MP20FI-II")
                        IF (MoedasEspecificas == "SIM")
                           fImpMoeda (nPgtDin, nPgtTic, nPgtChq, nPgtCar, nPgtPra, nPgtOut) 
                        ENDIF

                        ImpFechaCom( cAcrDes, nPerAcrDes, nVlrAcrDes,  nValorPago, cForma, cMensagem + cCrediario + Chr( 13 ) + Chr( 10 ) + Propaganda )
                     ELSE
                        ImpFechaSem( cAcrDes, nPerAcrDes, nVlrAcrDes, nTotal, nValorPago, cMensagem, ALLTRIM( cCliCGCCPF ) )
                     ENDIF
                 ENDIF

                 LancaEstoque(@nRegAtuCli, @nRegAtuEAN)


                 LancaCupom( nCliCodigo, cCliDescri, cCliEndere, cCliBairro,  cCliCidade, cCliEstado, nValorPagar, nVendedor)

                 IF (Len( aParcelas ) == 0)
                    nTroco := nValorPago - nValorPagar
                    IF( nTroco < 0)
                       nTroco := 0
                    ENDIF
                    WHILE (.T.)
                       IF (nTroco == 0)







                          SWGAviso( "FIM DO CUPOM FISCAL", {{0, " "}, {0, "   O Cupom Fiscal foi finalizado !"}, {0, " "}, {0, "   Para anular o Cupom, acione a tecla [F10]"}, {0, " "}, {0, "   Para continuar a rotina normal, acione qualquer tecla"}, {0, " "}}, 7, 3 )
                       ELSE









                          SWGAviso( "FIM DO CUPOM FISCAL", {{0, " "}, {0, "   O Cupom Fiscal foi finalizado !"}, {0, " "}, {1, "        Troco = R$  "   + ALLTRIM (TRAN (nValorPago - nValorPagar, "@E 99,999,999.99" ))} , {0, " "}, {0, "   Para anular o Cupom, acione a tecla [F10]"}, {0, " "}, {0, "   Para continuar a rotina normal, acione qualquer tecla"}, {0, " "}}, 7, 3, 300, 200, 800, 1220)
                       ENDIF
                       IF (LASTKEY () <> 27)

                          EXIT
                       ENDIF
                    END
                 ENDIF

                  IF (LASTKEY () == 13)
                     __Keyboard()
                  ENDIF

                 IF LastKey() == -9 .OR. LastKey() == -29







                    SWGAviso( "ANULACAO DO CUPOM FISCAL", {{0, " "}, {0, "   O Cupom Fiscal sera ANULADO !"}, {0, " "}, {0, "   Para confirmar, acione a tecla [F10]"}, {0, " "}, {0, "   Para continuar a rotina normal, acione qualquer tecla"}, {0, " "}}, 7, 4)
                    IF (LASTKEY () == -9 .OR. LASTKEY () == -29)
                       AnulaCupom( impCupomAtual(), nValorPagar )
                       IF lPrinter
                          ImpCancCupom()
                       ENDIF
                       VendaFile( 4 )
                       VendaFile( 6 )
                       VendaFile( 2 )
                       DispCupom( "Cupom ANULADO!", 2 )
                    ENDIF
                    IF (LASTKEY () == 27)
                       __Keyboard()
                    ENDIF
                 ELSEIF LastKey() == -8
                    IF lPrinter
                       Autentica( 0 )
                       Inkey(0)
                    ENDIF
                 ENDIF




                 IF (!LastKey() == -9 .AND. !LastKey() == -29)

                    IF Len( ALLTRIM( cCrediario ) ) > 100 .AND. lPrinter .AND.  !CarneInterno
                       IF (!Impressora == "BEMATECH-MP20FI-II")




                            ImpCarne( cCrediario, cCliDescri, IF( !Empty( cCliCgcCpf ),  Tran( cCliCgcCPF,  "@R 99.999.999/9999-99" ), Tran( cCliCgcCpf, "@R 999.999.999-99" ) ) )
                       ENDIF
                    ENDIF
                    IF (MoedasEspecificas == "SIM")
                       aMoedas := {}
                       AADD( aMoedas, { 794, nPgtDin })
                       AADD( aMoedas, { 795, nPgtTic })
                       AADD( aMoedas, { 796, nPgtChq })
                       AADD( aMoedas, { 797, nPgtCar })
                       AADD( aMoedas, { 798, nPgtPra })
                       AADD( aMoedas, { 799, nPgtOut })

                       LanRecMoeDiv( aMoedas, nCliCodigo, cCliDescri,  nPerAcrDes, cAcrDes )
                    ELSE
                       LancaReceber( aParcelas, nCliCodigo, cCliDescri )
                    ENDIF
                    LancaEmCaixa( nValorPagar )
                    VendaFile( 11 )
                    VendaFile( 4 )
                    VendaFile( 6 )
                    VendaFile( 2 )
                    DispCupom( " ", 0)
                    DispCupom( "Cupom FECHADO!", 2 )
                    DispCupom( " ", 0)
                    DispCupom( "\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/", 0, .T.)
                 ENDIF
                 DBUnLockAll()
                 lCupomAberto:= .F.
                 Exit
              ELSE
                 SWSnapPaste( 50, 100, nSaveF6 )
                 oTab:RefreshAll()
                 WHILE !oTab:Stabilize()
                 ENDDO
              ENDIF
              SWSnapKill( nSaveF6 )

         CASE nTecla == -8
              cBusca:= ""; lAchou := .T.
              Autentica( 0 )

         CASE nTecla == -4
              cBusca:= ""; lAchou := .T.
              IF lPrinter
                 ImpAbreGaveta()
              ENDIF

         CASE nTecla == -20 
              cBusca:= ""; lAchou := .T.
              IF (nStatus == 10)
                 nStatus:= nStatusAnt
              ELSE
                 nStatusAnt:= nStatus
                 nStatus:= 10
              ENDIF

         CASE nTecla == 1 
              cBusca:= ""; lAchou := .T.
              fAuxilio (@cVersao)

         CASE nTecla == 404 
              cBusca:= ""; lAchou := .T.
              nSavePDVIni:= SWSnapCopy( 50, 100, 1300, 950, 0, "PDV_PDVI.$$$" )

              SWGBox( 70, 200, 1290, 900, "CONFIGURACOES DO SISTEMA         " +  "                [CTRL+W] Grava   [ESC] Abandona", 15 )
              cPDVIni := MEMOREAD ("PDV.INI")
              cCorRes:= SetColor( "00/15" )
              cCurAnt := SetCursor ()
              SetCursor (3)
              cPDVIni:= MEMOEDIT( cPDVINI, 6, 6, 24, 74 )
              SetCursor (cCurAnt)
              MEMOWRIT( "PDV.INI", cPDVINI )
              SWSnapPaste( 50, 100, nSavePDVIni )
              SetColor( cCorRes )

         CASE UPPER( Chr( nTecla ) ) $ "ABCDEFGHIJKLMNOPQRSTUVWXYZ01234566789 -+*/"
              LoadcSet( 0, "VSYS14.PTX" )
              IF ALLTRIM( cBusca ) == ""

                 MPR->( DBSetOrder( 2 ) )
                 MPR->( DBGoTop() )
                 oTab:Up()
                 oTab:Up()
                 oTab:Up()
                 oTab:Up()
                 oTab:Up()
                 oTab:Up()
                 oTab:RefreshAll()
                 WHILE !oTab:Stabilize()
                 ENDDO
              ENDIF
              cBusca:= cBusca + CHR( nTecla )
              SayString( 250, 100, 4, 0, 1, PAD( cBusca, 28 ) )
              IF UPPER( Chr( nTecla ) ) $ "ABCDEFGHIJKLMNOPQRSTUVWXYZ-/0123456789-+*"
                 nReg:= MPR -> (RECNO())
                 MPR->( DBSetOrder( 2 ) ) 
                 IF MPR->( DBSeek( UPPER( cBusca ) ) )
                    nReg:= MPR->( RECNO() )
                    MPR->( DBGoTo( nReg ) )
                    MPR->( DBSetOrder( 2 ) ) 
                    LoadcSet( 0, "VSYS14.PTX" )
                    oTab:RefreshAll()
                    WHILE !oTab:Stabilize()
                    ENDDO
                    lAchou := .T.
                 ELSE
                    MPR->( DBGoTo( nReg ) )
                    lAchou := .F.
                 ENDIF
              ENDIF
         OTHERWISE                ;tone(125); tone(300)
      ENDCASE

      loadcSet( 0, cFontBrowse )
      oTAB:refreshcurrent()
      oTAB:stabilize()

   ENDDO


   Return (.T.)



   Function fExiFor( cFormula, nPgtXXX )

      Local lTemPonto := .F.

      FOR nCt := 1 TO Len( Alltrim( cFormula ) )
         cPos := Subs( Alltrim( cFormula ), nCt, 1 )
         IF !( cPos $ "0123456789.+-*/" )
            Return .F.
         ENDIF

         IF cPos == "."
            IF lTemPonto == .T.
               Return .F.
            ENDIF
            lTemPonto := .T.
         ENDIF
         IF cPos $ "+-*/"
            lTemPonto := .F.
         ENDIF
      NEXT



















      IF RIGHT( ALLTRIM( cFormula ), 1 ) $ "+-*/." .OR. LEFT( ALLTRIM( cFormula ), 1 ) $ "*/" .OR. AT( "+-", cFormula ) > 0 .OR. AT( "++", cFormula ) > 0 .OR. AT( "+/", cFormula ) > 0 .OR. AT( "+*", cFormula ) > 0 .OR. AT( "--", cFormula ) > 0 .OR. AT( "-+", cFormula ) > 0 .OR. AT( "-/", cFormula ) > 0 .OR. AT( "-*", cFormula ) > 0 .OR. AT( "/-", cFormula ) > 0 .OR. AT( "/+", cFormula ) > 0 .OR. AT( "//", cFormula ) > 0 .OR. AT( "/*", cFormula ) > 0 .OR. AT( "*-", cFormula ) > 0 .OR. AT( "*+", cFormula ) > 0 .OR. AT( "*/", cFormula ) > 0 .OR. AT( "**", cFormula ) > 0 .OR. AT( "..", cFormula ) > 0
         Return .F.
      ENDIF
      IF !EMPTY( cFormula )
         &nPgtXXX := &cFormula
         IF !( LASTKEY () == 5 )
            __Keyboard( ( CHR( 13 ) ) )
         ENDIF
      ENDIF

   Return (.T.)



   Function fExiForNum( cFormula, nPgtXXX, GetList )
   Private cFor:= cFormula

      IF EMPTY( cFormula )
         cFormula:= PAD( Alltrim( Str( nPgtXXX, 14, 2 ) ), 40 )
      ELSEIF !( nPgtXXX == &cFor )
         cFormula:= PAD( Alltrim( Str( nPgtXXX, 14, 2 ) ), 40 )
      ENDIF
      __MXRelease( "cFor" )

   Return (.T.)



   Function fPgtDin (nValorPagar, GetList )

      nPgtDin := nValorPagar - nPgtTic - nPgtChq - nPgtCar - nPgtOut

      IF nPgtDin < 0
         nPgtDin := 0
      ENDIF

      cPgtDin := PAD( Alltrim( Str( nPgtDin, 14, 2 ) ), 40 )

      fTroco( nValorPagar, nValorPago )

      FOR nCt:= 1 TO Len( GetList )
          GetList[ nCt ]:Display()
      NEXT

   Return (.T.)



   Function fTroco( nValorPagar, nValorPago )

      nValorPago := nPgtDin + nPgtTic + nPgtChq + nPgtCar + nPgtOut


      DevPos( 22, 37 ) ; DevOutPict( nValorPago - nValorPagar, "@R 99,999,999,999.99", "04/15" )

   Return (.T.)



   Function fVerifBusca (cBusca, nRegAtuEAN, oTab)

      Local lRet := .F.

      IF ! EMPTY( cBusca )


         IF (SUBSTR (cBusca, 1, 1) $ "0123456789" .AND.  SUBSTR (cBusca, 2, 1) $ "0123456789" .AND.  SUBSTR (cBusca, 3, 1) $ "0123456789")
             MPR->( DBSetOrder( 4 ) )
             IF !MPR->( DBSeek( PAD( cBusca, 13 ) ) )
                IF fCodigoEAN( @cBusca, @nRegAtuEAN)
                   lRet := .T.
                   nReg:= MPR->( RECNO() )
                ENDIF
             ELSE
                nReg:= MPR ->( RECNO() )
                lRet:= .T.

                LoadcSet( 0, "VSYS14.PTX" )
                oTab:Up()
                oTab:Up()
                oTab:Up()
                oTab:Up()
                oTab:Up()
                oTab:RefreshAll()
                WHILE !oTab:Stabilize()
                ENDDO
                MPR->( DBSeek( cBusca ) )
             ENDIF
         ENDIF
      ENDIF
      MPR -> (DBSetOrder (2)) 
      LoadcSet( 0, "VSYS14.PTX" )
      oTab:RefreshAll()
      WHILE !oTab:stabilize()
      ENDDO

   Return (lRet)



   Function fCodigoEAN (cBusca, nRegAtuEAN)

      Local lRet := .T.

      EAN -> (DBSetOrder (1)) 
      IF (EAN -> (DBSeek (UPPER( cBusca ))) = .F.)

         EAN -> (DBSetOrder (2)) 
         IF (EAN -> (DBSeek (UPPER( cBusca ))) = .F.)

            nReg:= MPR -> (RECNO())
            MPR->( DBSetOrder( 4 ) )
            IF (MPR -> (DBSeek (UPPER( cBusca ))) = .F.)








                SWGAviso( "ACESSO POR CODIGO DE BARRAS EAN", {{0, " "}, {0, "   O codigo EAN Interno e/ou Fabrica nao consta no arquivo !"}, {0, " "}, {0, "   Verifique o arquivo de Materias Primas do Fortuna"}, {0, " "}, {0, "   Para continuar a rotina normal, acione qualquer tecla"}, {0, " "}}, 7, 4)

                MPR -> (DBGoTo (nReg))

                lRet := .F.

            ENDIF

         ENDIF

      ENDIF

   Return (lRet)



   Function fCorEAN ()


      Local cCorAnt:= SetColor( ), nCursor:= SetCursor( ), nArea:= Select(),  nOrdem:= IndexOrd( )

      Local nSaveCorEAN, nTecla, oCores, nCorLin := 1, nCorRet := 0, nRegistro, aCores

      nRegAtuEAN := 0
      aCores := 0
      aCores := {}

      COR -> (DBSetOrder (1)) 

      cCodProAnt:= EAN->CODPRO
      nRegistro:= EAN->( RECNO() )

      WHILE (EAN -> (EOF ()) = .F. .AND. EAN -> CODPRO == cCodProAnt)
         IF (COR -> (DBSeek (EAN -> PCPCOR)) = .T.)
            IF (ASCAN (aCores, {| nElem | nElem [1] == COR -> CODIGO}) == 0)
               AADD (aCores, {COR -> CODIGO, COR -> DESCRI})
            ENDIF
         ENDIF
         EAN -> (DBSkip ())
      END

      EAN->( DBGoTo( nRegistro ) )

      IF Len( aCores ) == 0
         DBSetOrder( nOrdem )
         Return 0
      ENDIF

      ASORT( aCores,,, {|x,y| x[2] < y[2] } )

      nSaveCorEAN:= SWSnapCopy( 50, 100, 1280, 950, 0, "PDV_CORE.$$$" )

      IF (CorPadrao == "CINZA")
         SetColor( "08/15,00/03" ) 
      ELSE
         SetColor( "08/15,00/07" ) 
      ENDIF

      SWGBox( 480, 260, 1040, 800, "Cores do Item", 15 )
      Mensagem( )

      oCores:=TBrowseNew( 10, 30, 20, 59 )
      oCores:AddColumn( tbcolumnnew( ,{|| aCores [nCorLin, 2] + Space( 65 ) } ) )
      oCores:AutoLite:=.F.
      oCores:GOTOPBLOCK:={|| nCorLin:= 1}
      oCores:GOBOTTOMBLOCK:={|| nCorLin:= Len( aCores ) }
      oCores:SKIPBLOCK:={|x| SkipPerArr( x,aCores,@nCorLin )}
      oCores:dehilite( )

      oCores:RefreshAll( )
      WHILE !oCores:Stabilize( )
      ENDDO

      __Keyboard()

      WHILE .T.

         LoadcSet( 0, "VSYS14.PTX" )

         oCores:colorrect( { oCores:ROWPOS, 1, oCores:ROWPOS, 1 }, { 2, 1 } )
         WHILE !oCores:Stabilize( )
         ENDDO

         Mensagem( aCores [nCorLin, 2] )

         nTecla:= Inkey( 0 )

         DO CASE
            CASE nTecla==27
               EXIT
            CASE nTecla==5          ; oCores:up( )
            CASE nTecla==24        ; oCores:down( )
            CASE nTecla==18        ; oCores:pageup( )
            CASE nTecla==3        ; oCores:pagedown( )
            CASE nTecla==31   ; oCores:gotop( )
            CASE nTecla==30   ; oCores:gobottom( )
            CASE nTecla==13
                 nRegAtuEAN := EAN -> (RECNO ())
                 nCorRet := aCores[nCorLin, 1]
                 EXIT
            OTHERWISE                  ; Tone( 125 ); Tone( 300 )
         ENDCASE

         oCores:RefreshCurrent( )
         oCores:Stabilize( )

      ENDDO

      SWSnapPaste( 50, 100, nSaveCorEAN )
      SWSnapKill( nSaveCorEAN )

      DBSelectAr( nArea )
      DBSetOrder( nOrdem )

      SetColor( cCorAnt )
      SetCursor( nCursor )

   Return (nCorRet)



   Function fTamEAN (nCorEAN)


      Local cTamAnt:= SetColor( ), nCursor:= SetCursor( ), nArea:= Select(),  nOrdem:= IndexOrd( )

      Local nSaveTamEAN, nTecla, oTamanhos, nTamLin := 1, nTamRet := 0, nTam, nRegistro

      nRegAtuEAN := 0
      aTamanhos := 0
      aTamanhos := {}

      CLA -> (DBSetOrder (1)) 

      cCodProAnt:= EAN->CODPRO
      nRegistro:= EAN->( RECNO() )
      WHILE (EAN -> (EOF ()) == .F. .AND. EAN -> CODPRO == cCodProAnt)
         IF (EAN -> PCPCOR == nCorEAN)
            IF (CLA -> (DBSeek (EAN -> PCPCLA)) = .T.)
               cTam := STRZERO (EAN -> PCPTAM, 2)
               IF ASCAN( aTamanhos, {|x| x[1] == EAN->PCPTAM } ) <= 0 .AND. EAN->PCPTAM > 0
                  AADD(aTamanhos, {EAN -> PCPTAM, CLA -> TAMA&cTam, EAN -> SALDO_})
               ENDIF
            ENDIF
         ENDIF
         EAN -> (DBSkip ())
      END
      EAN->( DBGoTo( nRegistro ) )

      IF Len( aTamanhos ) == 0
         DBSetOrder( nOrdem )
         Return 0
      ENDIF

      ASORT( aTamanhos,,, {|x,y| x[2] < y[2] } )

      nSaveTamEAN:= SWSnapCopy( 50, 100, 1280, 950, 0, "PDV_TAME.$$$" )

      IF (CorPadrao == "CINZA")
         SetColor( "08/15,00/03" ) 
      ELSE
         SetColor( "08/15,00/07" ) 
      ENDIF

      SWGBox( 480, 260, 1040, 800, "Tamanhos do Item              Saldo", 15 )
      Mensagem( )

      oTamanhos:=TBrowseNew( 10, 30, 20, 59 )


      oTamanhos:AddColumn( tbcolumnnew( ,{|| aTamanhos[nTamLin, 2] +  "          " + TRAN (aTamanhos[nTamLin, 3], "@E 99,999.999") +  Space( 65 ) } ) )
      oTamanhos:AutoLite:=.F.
      oTamanhos:GOTOPBLOCK:={|| nTamLin:= 1}
      oTamanhos:GOBOTTOMBLOCK:={|| nTamLin:= Len( aTamanhos ) }
      oTamanhos:SKIPBLOCK:={|x| SkipPerArr( x,aTamanhos,@nTamLin )}
      oTamanhos:dehilite( )

      oTamanhos:RefreshAll( )
      WHILE !oTamanhos:Stabilize( )
      ENDDO

      __Keyboard()

      WHILE .T.

         LoadcSet( 0, "VSYS14.PTX" )
         oTamanhos:colorrect( { oTamanhos:ROWPOS, 1, oTamanhos:ROWPOS, 1 }, { 2, 1 } )
         WHILE !oTamanhos:Stabilize( )
         ENDDO

         Mensagem( aTamanhos [nTamLin, 2] )

         nTecla:= inkey( 0 )

         DO CASE
            CASE nTecla==27
               EXIT
            CASE nTecla==5          ; oTamanhos:up( )
            CASE nTecla==24        ; oTamanhos:down( )
            CASE nTecla==18        ; oTamanhos:pageup( )
            CASE nTecla==3        ; oTamanhos:pagedown( )
            CASE nTecla==31   ; oTamanhos:gotop( )
            CASE nTecla==30   ; oTamanhos:gobottom( )
            CASE nTecla==13
                 nRegAtuEAN := EAN -> (RECNO ())
                 nTamRet := aTamanhos [nTamLin, 1]
                 EXIT
            OTHERWISE                  ; Tone( 125 ); Tone( 300 )
         ENDCASE

         oTamanhos:RefreshCurrent( )
         oTamanhos:Stabilize( )

      ENDDO

      SWSnapPaste( 50, 100, nSaveTamEAN )
      SWSnapKill( nSaveTamEAN )

      DBSelectAr( nArea )
      DBSetOrder( nOrdem )

      SetColor( cTamAnt )
      SetCursor( nCursor )

   Return (nTamRet)



   Function fVerLimCred( lLimCredAvis, nCliCodigo, nTotal, nSalLimCre )


      Local cTamAnt:= SetColor( ), nCursor:= SetCursor( ), nArea:= Select(),  nOrdem:= IndexOrd( )
      Local lRet := .T.

      CLI->( DBSetOrder( 1 ) )
      IF ( CLI->( DBSeek( nCliCodigo ) ) )
         IF CLI->LIMCR_ > 0 .AND. !lLimCredAvis .AND. nTotal > nSalLimCre
            WHILE (.T.)






               SWGAviso( "LIMITE DE CREDITO", {{0, "   Este cliente esta com o limite de credito esgotado!"}, {0, " "}, {1, "      LIMITE DE CREDITO = R$  " + ALLTRIM( TRAN( CLI->LIMCR_, "@E 99,999,999.99" ))}, {1, "                  SALDO = R$  " + ALLTRIM( TRAN( nSalLimCre,  "@E 99,999,999.99" ))}, {0, " "}, {0, " "}}, 7, 4, 300, 200, 800, 1220)
               IF (LASTKEY () == 13)
                  lLimCredAvis := .T.
                  EXIT
               ELSE
                  IF (LASTKEY () == 27)
                     lRet := .F.
                     EXIT
                  ENDIF
               ENDIF
            ENDDO
         ENDIF
      ENDIF

      SetColor( cTamAnt )
      SetCursor( nCursor )

   Return (lRet)



   Function fVerSalEst (nQuantidade, nTamEAN, nCorEAN, nRegAtuEAN)


      Local cTamAnt:= SetColor( ), nCursor:= SetCursor( ), nArea:= Select(),  nOrdem:= IndexOrd( )
      Local lRet := .T., nSaldo, lSemSaldo

      EAN -> (DBSetOrder (3)) 


      IF (EAN -> (DBSeek (MPR -> INDICE + STR (MPR -> PCPCLA, 3) +  STR (nTamEAN, 2) + STR (nCorEAN, 2))) == .T.)
         nRegAtuEAN := EAN -> (RECNO ())
      ELSE
         nRegAtuEAN := 0
      ENDIF

      lSemSaldo := .F.

      IF (nRegAtuEAN <> 0)
         IF (nQuantidade > EAN -> SALDO_)
            lSemSaldo := .T.
            nSaldo    := EAN -> SALDO_
         ENDIF
      ELSEIF (nQuantidade > MPR -> SALDO_)
         lSemSaldo := .T.
         nSaldo    := MPR -> SALDO_
      ENDIF

      IF (lSemSaldo == .T.)
         WHILE (.T.)









            SWGAviso( "SALDO EM ESTOQUE", {{0, "   Este item esta com o saldo em estoque esgotado !"}, {0, " "}, {1, "      Saldo atual = " + ALLTRIM (TRAN (nSaldo, "@E 99,999,999.99999" ))} , {1, "      Diferenca   = " + ALLTRIM (TRAN (nSaldo - nQuantidade, "@E 99,999,999.99999" ))} , {0, " "}, {0, "   Para confirmar a VENDA deste item, acione a tecla [ENTER]"}, {0, " "}, {0, "   Para NAO VENDER este item, acione a tecla [ESC]"}, {0, " "}}, 7, 4, 300, 200, 800, 1220)
            IF (LASTKEY () == 13)
               EXIT
            ELSE
               IF (LASTKEY () == 27)
                  lRet := .F.
                  EXIT
               ENDIF
            ENDIF
         END
      ENDIF

      DBSelectAr( nArea )
      DBSetOrder( nOrdem )

      SetColor( cTamAnt )
      SetCursor( nCursor )

   Return (lRet)













func skipperarr(NTOJUMP,WMATRIZ,nROW)
loca NJUMPED:=0
if nROW + NTOJUMP < 1
   NJUMPED:=-nROW + 1
   nROW:=1
elseif nROW + NTOJUMP > len(WMATRIZ)
   NJUMPED:=len(WMATRIZ) - nROW
   nROW:=len(WMATRIZ)
else
   NJUMPED:=NTOJUMP
   nROW+=NTOJUMP
endif
return NJUMPED



   Function DispCupom( cProduto, nCor, lDupla )

      _VScroll( 778, 498, 1340, 840, 20, 15 )
       loadcSet( 0, "AGSYSA14.PTX" )
       IF lDupla == Nil
          Boxfill(  778, 498, 1, 18, 20, 8)
          Boxfill( 1335, 500, 1, 18, 20, 8)
       ENDIF

       IF !lDupla == Nil .AND. lDupla == .T.
          SayString( 778, 498, 4, 0, 0, cProduto )
          SayString( 780, 500, 4, 0, 0, cProduto )
       ELSE
          FOR nCt:=  1 TO LEN( cProduto )
             SayString( 800, 500, 4, 0, nCor, Substr( cProduto, 1, nCt ) )
          NEXT
          SayString( 800, 500, 4, 0, nCor, cProduto )
       ENDIF

   Return (.T.)



   Function DispValor( cValor, nCor )

       loadcSet( 0, "AGSYSA14.PTX" )

       SayString(1235, 500, 4, 0, nCor, cValor )

   Return (.T.)



   Function SWGBox( nCol1, nLin1, nCol2, nLin2, cTitulo, nCor, nTipo )

      Local nCt

      SetBkFill( nCor )
      SetRGBDAC( 62, 51, 153, 255 )

      IF nTipo==Nil
         nTipo:= 2
      ENDIF

      IF nTipo==1
         BoxFill( nCol1+6, nLin1-8, (nCol2-nCol1), (nLin2-nLin1), 3+32,  8)  
         BoxFill( nCol1+4, nLin1-7, (nCol2-nCol1), (nLin2-nLin1), 3+32, 15)  
         IF (CorPadrao == "CINZA")
            BoxFill( nCol1+4, nLin1-7, (nCol2-nCol1), (nLin2-nLin1), 3+32, 13)  
            BoxFill( nCol1+1, nLin1-3, (nCol2-nCol1), (nLin2-nLin1), 3+32, 13)  
            BoxFill( nCol1+1, nLin1,   (nCol2-nCol1), (nLin2-nLin1), 5+32, 13)  
         ELSE
            BoxFill( nCol1+2, nLin1-5, (nCol2-nCol1), (nLin2-nLin1), 3+32,  8)  
            BoxFill( nCol1+1, nLin1-1, (nCol2-nCol1), (nLin2-nLin1), 3+32,  8)  
            BoxFill( nCol1+1, nLin1,   (nCol2-nCol1), (nLin2-nLin1), 6+32,  8)  
         ENDIF
         BoxFill( nCol1+1, nLin1-3, (nCol2-nCol1), (nLin2-nLin1), 3+32, 15)  
         BoxFill( nCol1+1, nLin1,   (nCol2-nCol1), (nLin2-nLin1), 5+32, 15)  
         BoxFill( nCol1, nLin1, nCol2-nCol1, nLin2-nLin1, 64, nCor )
      ELSEIF nTipo==2

         BoxFill( nCol1, nLin1, (nCol2-nCol1), (nLin2-nLin1), 128, 7 )
         FOR nCt:= 1 TO 2
            DrawLine( nCol1-nCt, nLin2+nCt, nCol2+nCt,  nLin2+nCt, 0, 0, 15 )
            DrawLine( nCol1-nCt, nLin2+nCt, nCol1-nCt,  nLin1-nCt, 0, 0, 15 )
            IF (CorPadrao == "CINZA")
               DrawLine( nCol1-nCt, nLin2+nCt, nCol2+nCt,  nLin2+nCt, 0, 0, 15 )
               DrawLine( nCol1-nCt, nLin2+nCt, nCol1-nCt,  nLin1-nCt, 0, 0, 15 )
            ELSE
               DrawLine( nCol1-nCt, nLin1-nCt, nCol2+nCt,  nLin1-nCt, 0, 0, 08 )
               DrawLine( nCol2+nCt, nLin1-nCt, nCol2+nCt,  nLin2+nCt, 0, 0, 08 )
            ENDIF
         NEXT
         IF (CorPadrao == "CINZA")
            BoxFill( nCol1+10, nLin2-43, (nCol2-nCol1)-20, 35, 128, 3 ) 
         ELSE
            BoxFill( nCol1+10, nLin2-43, (nCol2-nCol1)-20, 35, 128, 1 ) 
         ENDIF

         nCol1+=7
         nLin1+=57


         BoxFill(  nCol1+5,  nLin1-50, (nCol2-nCol1)-20, 40, 64,   8 )
         DrawLine( nCol1+5,  nLin1-50, nCol2-15, nLin1-50, 0, 0,  15 )
         DrawLine( nCol2-15, nLin1-50, nCol2-15, nLin1-10, 0, 0,  15 )



         UltimaTela( nCol1, nLin1-50 )
         nCol2-=7
         nLin2-=50

         BoxFill( nCol1, nLin1, (nCol2-nCol1), (nLin2-nLin1), 128, 15 )



         IF !( nCor==Nil )
            BoxFill( nCol1, nLin1, (nCol2-nCol1), (nLin2-nLin1), 128, 15 )
         ELSE
            BoxFill( nCol1, nLin1, (nCol2-nCol1), (nLin2-nLin1), 128, 15 )
         ENDIF



         FOR nCt:= 1 TO 4
             DrawLine( nCol1+nCt, nLin2-nCt, nCol2-nCt, nLin2-nCt, 0, 0, 177  )
             DrawLine( nCol1+nCt, nLin1+nCt, nCol1+nCt, nLin2-nCt, 0, 0, 177  )
             DrawLine( nCol1+nCt, nLin1+nCt, nCol2-nCt, nLin1+nCt, 0, 0, 7 )
             DrawLine( nCol2-nCt, nLin1+nCt, nCol2-nCt, nLin2-nCt, 0, 0, 7 )
         NEXT
         IF !cTitulo==Nil
            LoadCSet( 000, "VSYS14.PTX" )
            SayString( nCol1+15, nLin2+5, 5, 0,  0, cTitulo ) 
            SayString( nCol1+12, nLin2+8, 5, 0, 14, cTitulo ) 
         ENDIF
      ENDIF
      loadcSet( 0, "VSYS14.PTX" )

   Return (.T.)



Function SWGAviso( cTitulo, aAviso, nCor, nCorTit, nLin1x, nCol1x, nLin2x, nCol2x )




   Local nTelaVal:= SWSnapCopy( 0, 0, 1250, 900, 0, "PDV_AVIS.$$$" )
   Local nCt

   nLin1:= IIF (nLin1x == NIL,  300, nLin1x)
   nCol1:= IIF (nCol1x == NIL,  200, nCol1x)
   nLin2:= IIF (nLin2x == NIL,  700, nLin2x)
   nCol2:= IIF (nCol2x == NIL, 1220, nCol2x)

   SetBkFill( 7 )
   SetRGBDAC( 62, 51, 153, 255 )
   BoxFill( nCol1, nLin1, (nCol2-nCol1), (nLin2-nLin1), 128, nCor )              
   BoxFill( nCol1+10, nLin1+11, (nCol2-nCol1)-24, (nLin2-nLin1)-64, 64, 8 )      
   BoxFill( nCol1+11, nLin1+10, (nCol2-nCol1)-24, (nLin2-nLin1)-64, 64, nCor+8 ) 
   BoxFill( nCol1+10, nLin1+10, nCol2-nCol1-24, 0, 64, 8 )                 

   FOR nCt:= 1 TO 2
       DrawLine( nCol1-nCt, nLin2+nCt, nCol2+nCt,  nLin2+nCt, 0, 0, nCor+8 )
       DrawLine( nCol1-nCt, nLin2+nCt, nCol1-nCt,  nLin1-nCt, 0, 0, nCor+8 )
       DrawLine( nCol1-nCt, nLin1-nCt, nCol2+nCt,  nLin1-nCt, 0, 0, 08 )
       DrawLine( nCol2+nCt, nLin1-nCt, nCol2+nCt,  nLin2+nCt, 0, 0, 08 )
   NEXT

   IIF (!CorPadrao == "CINZA" .AND. nCorTit == 3, nCorTit := 1, NIL)

   BoxFill( nCol1+10, nLin2-43, (nCol2-nCol1)-20, 35, 128, nCorTit ) 

   loadcSet( 0, "VSYS14.PTX" )

   IF !cTitulo==Nil
      SayString( nCol1+20, nLin2-45, 5, 0,  0, cTitulo )
      SayString( nCol1+18, nLin2-43, 5, 0, 14, cTitulo )
   ENDIF

   FOR nCt:= Len( aAviso ) TO 1 Step -1
       SayString( nCol1+30, (nLin2-50) - ( nCt * 50 ), 5, 0, aAviso[ nCt, 1 ], aAviso[ nCt, 2 ] )
       IF (LEFT (aAviso[ nCt, 2 ], 1) == "")
          SayString( nCol1+32, (nLin2-52) - ( nCt * 50 ), 5, 0,       0, "")

          SayString( nCol1+30, (nLin2-50) - ( nCt * 50 ), 5, 0, nCorTit, "")
       ENDIF
   NEXT

   Inkey(0)

   r= SWSnapPaste( 0, 0, nTELAVAL )
   r= SWSnapKill( nTELAVAL )

Return (.T.)



Function Efeito()
Local nCor














Function VendaFile( xPar1, xPar2, xPar3, xPar4, nTamEAN, nCorEAN)
Local nCodLan, aStr, nReg
Local nPrecoV, nPrecoT, nQuant_, cSt
Local nArea:= Select()
Local xRetornar:= Nil

   IF xPar1==7
      DBSelectAr( 123 )
      IF Used()
         DBSetOrder( 2 )
         DBGoBottom()
         nCodLan:= CODLAN + 1
         nPrecoV:= MPR->( PrecoConvertido() )
         nPrecoT:= xPar2
         nQuant_:= xPar3
         cSt:=     xPar4
         DBAppend()















         _FIELD->CODLAN := nCodLan; _FIELD->INDICE := MPR->( INDICE ); _FIELD->CODFAB := MPR->CODFAB; _FIELD->DESCRI := MPR->DESCRI; _FIELD->UNIDAD := MPR->UNIDAD; _FIELD->STATUS := " "; _FIELD->PRECOV := nPrecoV; _FIELD->QUANT_ := nQuant_; _FIELD->PRECOT := nPrecoT; _FIELD->DATA__ := DATE(); _FIELD->HORA__ := TIME(); _FIELD->ST____ := cSt; _FIELD->PCPCLA := MPR->PCPCLA; _FIELD->PCPTAM := nTamEAN; _FIELD->PCPCOR := nCorEAN; _FIELD->NUMCUP := VAL( Str( CodigoCaixa, 3, 0 ) + NumeroCupom() ) ;IIF( FIELDPOS( "FILIAL" ) > 0, IF( _FIELD->FILIAL==0, _FIELD->FILIAL:= CodigoFilial, Nil ), Nil )
      ENDIF
   ELSEIF xPar1 == 6
















      aStr:= {{ "CODLAN", "N", 03, 00 }, { "INDICE", "C", 12, 00 }, { "CODFAB", "C", 13, 00 }, { "DESCRI", "C", 45, 00 }, { "UNIDAD", "C", 02, 00 }, { "PRECOV", "N", 16, 02 }, { "PRECOT", "N", 16, 02 }, { "QUANT_", "N", 16, 03 }, { "ST____", "C", 03, 00 }, { "STATUS", "C", 01, 00 }, { "DATA__", "D", 08, 00 }, { "HORA__", "C", 08, 00 }, { "INFO__", "C", 80, 00 }, { "PCPCLA", "N", 03, 00 }, { "PCPTAM", "N", 02, 00 }, { "PCPCOR", "N", 03, 00 }, { "NUMCUP", "N", 09, 00 }}
      DBCreate( "PDV_PEND.VPB", aStr )

   ELSEIF xPar1 == 2
      DBSelectAr( 123 )
      IF !Used()
         dbUseArea( .F., "DBFNTX", "PDV_PEND.VPB", "VDA", if(.F. .OR. .T., !.T., NIL), .F. )
         ordCondSet(,,,,,, RECNO(),,,, ) ; ordCreate("PDV_PEND.NT1", "VDA1", "INDICE", {|| INDICE}, )
         ordCondSet(,,,,,, RECNO(),,,, ) ; ordCreate("PDV_PEND.NT2", "VDA2", "CODLAN", {|| CODLAN}, )
         if !.F. ; ordListClear() ; end; ordListAdd( "PDV_PEND.NT1" ); ordListAdd( "PDV_PEND.NT2" )
      ENDIF

   ELSEIF xPar1 == 4
      DBSelectAr( 123 )
      IF Used()
         DBCloseArea()
      ENDIF
      FErase( "PDV_PEND.VPB" )
   ELSEIF xPar1 == 9
      xRetornar:= .F.
      DBSelectAr( 123 )
      IF Used()
         nReg:= RECNO()
         DBGoBottom()
         WHILE !BOF()
            IF xPar2 == INDICE .AND. STATUS==" "
               xRetornar:= .T.
               EXIT
            ELSE
               DBSkip(-1)
            ENDIF
            xRetornar:= .F.
         ENDDO
         IF BOF()
            xRetornar:= .F.
         ENDIF
      ENDIF
   ELSEIF xPar1 == 11
      DBSelectAr( 123 )
      __dbCopy( "BAKUPULT.VPB", { },,,,, .F., )

   ELSEIF xPar1 == 12
      IF File( "BAKUPULT.VPB" )
         DBSelectAr( 111 )
         dbUseArea( .F., "DBFNTX", "BAKUPULT.VPB", "BKP", if(.F. .OR. .F., !.F., NIL), .F. )
         __dbCopy( "PDV_PEND.VPB", { },,,,, .F., )
         DBCloseArea()
         xRetornar:= .T.
      ELSE
         VendaFile( 6 )
         xRetornar:= .F.
      ENDIF

   ELSEIF xPar1 == 5
      DBSelectAr( 123 )
      IF Used()
         DBSetOrder( 1 )
         IF VendaFile( 9, xPar2 )
            nPrecoV:= PRECOV
            nPrecoT:= PRECOT
            nQuant_:= QUANT_
            cSt:=     ST____
            _FIELD->STATUS := "X" ;IIF( FIELDPOS( "FILIAL" ) > 0, IF( _FIELD->FILIAL==0, _FIELD->FILIAL:= CodigoFilial, Nil ), Nil )
            DBAppend()











            _FIELD->CODLAN := -1; _FIELD->INDICE := MPR->( INDICE ); _FIELD->CODFAB := MPR->CODFAB; _FIELD->DESCRI := MPR->DESCRI; _FIELD->UNIDAD := MPR->UNIDAD; _FIELD->STATUS := "E"; _FIELD->PRECOV := nPrecoV; _FIELD->QUANT_ := nQuant_; _FIELD->PRECOT := nPrecoT; _FIELD->DATA__ := DATE(); _FIELD->HORA__ := TIME(); _FIELD->ST____ := cSt ;IIF( FIELDPOS( "FILIAL" ) > 0, IF( _FIELD->FILIAL==0, _FIELD->FILIAL:= CodigoFilial, Nil ), Nil )
            xRetornar:= .T.
         ELSE
            xRetornar:= .F.
         ENDIF
      ELSE
         xRetornar:= .F.
      ENDIF
   ELSEIF xPar1 == 8
      DBSelectAr( 123 )
      IF Used()

         xRetornar:= { CODLAN, INDICE, CODFAB, DESCRI, UNIDAD, STATUS, PRECOV, QUANT_, PRECOT, DATA__, HORA__, ST____ }
      ENDIF
   ELSEIF xPar1 == 3
      DBSelectAr( 123 )
      IF Used()
         __dbZap()
      ENDIF
   ELSEIF xPar1 == 10
      DBSelectAr( 123 )
      IF Used()
         xRetornar:= LASTREC()
      ELSE
         xRetornar:= 0
      ENDIF
   ENDIF
   DBSelectAr( nArea )
   Return xRetornar



   Function NumeroCupom( cNumero )

      Static cCupom
      IF cNumero == Nil
         IF cCupom == Nil
            Return "NAO INFORMADO"
         ELSEIF cCupom == ""
            Return "NAO INFORMADO"
         ENDIF
      ELSEIF cNumero=="<Buscar>"
         IF ( cCupom:= ImpCupomAtual() )== Nil
            Return ""
         ENDIF
      ELSEIF VAL( cNumero ) > 0
         cCupom:= cNumero
      ELSE
         cCupom:= ImpCupomAtual()
      ENDIF

   Return cCupom



Function AnulaCupom( cCupom, nTotal )
Local nCt:= 0, lCancelado:= .F.
  DBSelectAr( 18 )
  IF !USED()
     dbUseArea( .F., "DBFNTX", "&DiretoriodeDados\CUPOM___.VPB", "CUP", if(.T. .OR. .F., !.F., NIL), .F. )



     if !.F. ; ordListClear() ; end; ordListAdd( "&DiretoriodeDados\CUPIND01.IGD" ); ordListAdd( "&DiretoriodeDados\CUPIND02.IGD" ); ordListAdd( "&DiretoriodeDados\CUPIND03.IGD" ); ordListAdd( "&DiretoriodeDados\CUPIND04.IGD" )
  ENDIF
  DBSelectAr( 19 )
  IF !USED()
     dbUseArea( .F., "DBFNTX", "&DiretoriodeDados\CUPOMAUX.VPB", "CPA", if(.T. .OR. .F., !.F., NIL), .F. )




     if !.F. ; ordListClear() ; end; ordListAdd( "&DiretoriodeDados\CAUIND01.IGD" ); ordListAdd( "&DiretoriodeDados\CAUIND02.IGD" ); ordListAdd( "&DiretoriodeDados\CAUIND03.IGD" ); ordListAdd( "&DiretoriodeDados\CAUIND04.IGD" ); ordListAdd( "&DiretoriodeDados\CAUIND05.IGD" )
  ENDIF
  DBSelectAr( 18 )
  DBGoBottom()
  WHILE nCt < 10
     ++nCt
     IF CUP->VLRTOT==nTotal .AND. CUP->FUNC__==CodigoCaixa .AND. CUP->DATAEM==DATE()
        IF CUP->( RLock() )
           _FIELD->CUP->NFNULA := "*" ;IIF( FIELDPOS( "FILIAL" ) > 0, IF( _FIELD->FILIAL==0, _FIELD->FILIAL:= CodigoFilial, Nil ), Nil )
           lCancelado:= .T.
           EXIT
        ENDIF
     ENDIF
     CUP->( DBSkip( -1 ) )
  ENDDO
  IF !lCancelado
     CUP->( DBSetOrder( 1 ) )
     IF CUP->( DBSeek( VAL( StrZero( CodigoCaixa, 03, 00 ) + NumeroCupom() ) ) )
        IF CUP->( RLock() )
           _FIELD->CUP->NFNULA := "*" ;IIF( FIELDPOS( "FILIAL" ) > 0, IF( _FIELD->FILIAL==0, _FIELD->FILIAL:= CodigoFilial, Nil ), Nil )
        ENDIF
     ENDIF
  ENDIF
  CUP->( DBCloseArea() )
  DBSelectAr( 10 )
  RetornaEstoque( Nil )
  Return .F.













Static Function Mensagem( cMensagem )
Local nLin:= UltimaTela()[2], nCol:= UltimaTela()[1], nCursor:= SetCursor( )
Static nHUltTela
SetCursor( 0 )
IF !nLin==Nil
   IF nLin > 0
      IF nHUltTela==Nil .OR. cMensagem==Nil
         nHUltTela:= SWSnapCopy( 0, nLin, 1200, nLin+50, 0, "PDV_MENS.$$$" )
         IF cMensagem==Nil
            SetCursor( nCursor )
            Return .T.
         ENDIF
      ENDIF
      SWSnapPaste( 0, nLin, nHUltTela )
      loadcSet( 0, "VSYS14.PTX" )
      SayString( nCol+14, nLin+4, 4, 0, 8, cMensagem )
      SayString( nCol+12, nLin+6, 4, 0, 11, cMensagem )
      LoadcSet( 0, "VSYS14.PTX" )
   ENDIF
ENDIF
SetCursor( nCursor )
Return .T.



Function UltimaTela( nCol, nLin )
Static nUTLin, nUTCol
IF nCol==Nil
   Return { nUTCol, nUTLin }
ELSE
   nUTLin:= nLin
   nUTCol:= nCol
ENDIF
Return { nUTCol, nUTLin }













Function BuscaCli( nCliCodigo, cCliDescri, cCliEndere,  cCliBairro,  cCliCidade,  cCliEstado,  cCliCodCep,  cCliCGCCPF, GetList )
Local cFontBrowse:= "VSYS14.PTX"
Local nCt:= 0
Local nArea:= Select(), oTb, nCursor:= SetCursor(), nColor := SetColor ()
Local nTelaC
Local cBusca:= "", nTecla
Local nRegiao, nBotao

   IF (CorPadrao == "CINZA")
      SetColor( "08/15,15/08,00/03,00/07" ) 
   ELSE
      SetColor( "08/15,15/08,00/07,00/07" ) 
   ENDIF


  SetCursor( 0 )
  DBSelectAr( 13 )
  DBSetOrder( 2 )
  DBGotop()
  IF !EMPTY( cCliDescri )
     DBSeek( PAD( cCliDescri, 45 ) )
     IF ALLTRIM( cCliDescri ) == ALLTRIM( DESCRI )
        nCliCodigo:= CODIGO
        cCliDescri:= DESCRI
        cCliCGCCPF:= IF( EMPTY( CGCMF_ ), CPF___, CGCMF_ )
        cCliBairro:= BAIRRO
        cCliCidade:= CIDADE
        cCliEndere:= ENDERE
        cCliEstado:= ESTADO
        cCliCodCep:= CODCEP
        FOR nCt:= 1 TO Len( GetList )
            GetList[ nCt ]:Display()
        NEXT
     ENDIF

     DBSelectAr( 13 )

     DBSelectAr( nArea )
     SetCursor( nCursor )
     Return .T.
  ELSE
     nTelaC:= SWSnapCopy( 50, 100, 1280, 950, 0, "PDV_BUCL.$$$" )
     loadcSet( 0, "VSYS14.PTX" )
     SWGBox( 220, 220, 1250, 800, "Pesquisa ao Cadastro de Clientes", 15 )
     Mensagem( )
     IF EMPTY( cCliDescri )

        oTb:= TBrowseDB( 10, 14, 23, 70 )
        oTb:addcolumn(tbcolumnnew(,{|| PAD( " " + Left( CLI->DESCRI, 39 ), 65 ) }))

        oTb:AUTOLITE:=.F.
        oTb:dehilite()
        WHILE .T.
            loadcSet( 0, cFontBrowse )
            oTb:colorrect({oTb:ROWPOS,1,oTb:ROWPOS,1},{2,1})
            WHILE nextkey()==0 .AND. ! oTb:stabilize()
            ENDDO

            IF !( cBusca == "" )
               Mensagem( "Pesquisa " + cBusca )
            ELSE
               Mensagem( CLI->CIDADE + " " + CLI->CGCMF_ + " " + CLI->CPF___ )
            ENDIF

            WHILE ( nTecla:=Inkey() )==0
               nRegiao:= 1
               nBotao:= MStatus()
               IF MMotion() <> 0


               ENDIF
               IF nRegiao > 0
                  IF nBotao==1
                     __Keyboard( Chr( 5 ) + Chr( 0 ) )
                  ELSEIF nBotao==2
                     __Keyboard( Chr( 24 ) + Chr( 0 ) )
                  ENDIF
               ENDIF
            ENDDO


            IF !( UPPER( Chr( nTecla ) ) $ "ABCDEFGHIJKLMNOPQRSTUVXYZW0123456789 &" )
               cBusca:= ""
            ENDIF
            IF nTecla==27
               nCliCodigo:= 0
               cCliDescri:= Space( Len( DESCRI ) )
               cCliCGCCPF:= Space( 14 )
               cCliBairro:= Space( Len( BAIRRO ) )
               cCliCidade:= Space( Len( CIDADE ) )
               cCliEndere:= Space( Len( ENDERE ) )
               cCliEstado:= Space( 2 )
               cCliCodCep:= Space( 8 )
               __Keyboard( Chr( 5 ) )
               EXIT
            ENDIF
            DO CASE
               CASE nTecla==5         ;oTb:up()
               CASE nTecla==24       ;oTb:down()
               CASE nTecla==19
               CASE nTecla==4
               CASE nTecla==18       ;oTb:pageup()
               CASE nTecla==31  ;oTb:gotop()
               CASE nTecla==3       ;oTb:pagedown()
               CASE nTecla==30  ;oTb:gobottom()
               CASE UPPER( Chr( nTecla ) ) $ "ABCDEFGHIJKLMNOPQRSTUVXYZW0123456789 &"
                    cBusca:= cBusca + UPPER( Chr( nTecla ) )
                    DBSeek( UPPER( cBusca ), .T. )
                    oTb:RefreshAll()
                    WHILE !oTb:Stabilize()
                    ENDDO

               CASE nTecla==13
                    nCliCodigo:= CODIGO
                    cCliDescri:= DESCRI
                    cCliCGCCPF:= IF( EMPTY( CGCMF_ ), CPF___, CGCMF_ )
                    cCliBairro:= BAIRRO
                    cCliCidade:= CIDADE
                    cCliEndere:= ENDERE
                    cCliEstado:= ESTADO
                    cCliCodCep:= CODCEP
                    IF ( fVerLimCred( .F., @nCliCodigo, 1, 0 ) == .T. )
                        EXIT
                    ENDIF
               OTHERWISE                ;tone(125); tone(300)
            ENDCASE
            loadcSet( 0, "VSYS14.PTX" )
            oTb:refreshcurrent()
            oTb:stabilize()
        ENDDO
     ENDIF


     SWSnapPaste( 50, 100, nTelaC )
     SWSnapKill( nTelaC )

  ENDIF
  FOR nCt:= 1 TO Len( GetList )
      GetList[ nCt ]:Display()
  NEXT
  SetColor (nColor)
  DBSelectAr( nArea )
  SetCursor( nCursor )
  Return .T.















Function AcrDes( cAcrDes, nPerAcrDes, nVlrAcrDes, nValorPagar, nTotal )
Local nCursor:= SetCursor( )
SetCursor( 0 )
IF cAcrDes == "A"
   IF nPerAcrDes > 0
      nValorPagar:= nTotal + ( ( nTotal * nPerAcrDes ) / 100 )
   ELSEIF nVlrAcrDes > 0
      nValorPagar:= nTotal + nVlrAcrDes
   ELSE
      nValorPagar:= nTotal
   ENDIF
ELSEIF cAcrDes == "D"
   IF nPerAcrDes > 0
      nValorPagar:= nTotal - ( ( nTotal * nPerAcrDes ) / 100 )
      nVlrAcrDes:= nTotal - nValorPagar
   ELSEIF nVlrAcrDes > 0
      nValorPagar:= nTotal - nVlrAcrDes
   ELSE
      nValorPagar:= nTotal
      nVlrAcrDes:= 0
   ENDIF
ENDIF
SetCursor( nCursor )
Return .T.



   Function ExibeTotais( cTitulo, nValor )
   Return (.T.)

      loadcSet( 0, "VSYS14.PTX" )
      SayString( 35, 500, 4, 0, 0, cTitulo )

      LoadcSet( 0, "DGE1609.PTX" )
      SayString( 400, 500, 4, 0, 7, Alltrim( Tran( nValor, "@E 999,999.99" ) ) )
      SayString( 400, 502, 4, 0, 1, Alltrim( Tran( nValor, "@E 999,999.99" ) ) )

   Return (.T.)











Function Pula()
__Keyboard( Chr( LastKey() ) )
Return .T.













Function BuscaVENDEDOR( nCodigo )
Local nCursor:= SetCursor()
Local nArea:= Select()
   DBSelectAr( 15 )
   IF !Used()
      dbUseArea( .F., "DBFNTX", "&DiretorioDeDados\VENDEDOR.VPB", "VEN", if(.T. .OR. .F., !.F., NIL), .F. )

      if !.F. ; ordListClear() ; end; ordListAdd( "&DiretoriodeDados\VENIND01.IGD" ); ordListAdd( "&DiretoriodeDados\VENIND02.IGD" )
   ENDIF
   DBSetOrder( 1 )
   DBGotop()
   IF DBSeek( nCodigo )
      DBSelectAr( 34 )
      DBCloseArea()
      DBSelectAr( nArea )
      SetCursor( nCursor )
      Return .T.
   ELSEIF nCodigo==0
      DBSelectAr( 34 )
      DBCloseArea()
      DBSelectAr( nArea )
      SetCursor( nCursor )
      Return .T.
   ENDIF
   Return .F.













Function FormaPagamento( nLin1, nCol1, nLin2, nCol2, aParcelas, nValorPagar, nVezes, nForma, cForma )
Local nArea:= Select()
Local oTb, cBusca:= "", nColor := SetColor ()
Local nSaveFP:= SWSnapCopy( 50, 100, 1260, 900, 0, "PDV_FOPA.$$$" )

   IF (CorPadrao == "CINZA")
      SetColor( "08/15,01/15,00/03,00/07" ) 
   ELSE
      SetColor( "08/15,01/15,00/07,00/07" ) 
   ENDIF

   DBSelectAr( 17 )
   dbUseArea( .F., "DBFNTX", "&DiretoriodeDados\CDDUPAUX.VPB", "DPA", if(.T. .OR. .F., !.F., NIL), .F. )
   IF File( DiretoriodeDados + "\DPAIND05.IGD" )




      if !.F. ; ordListClear() ; end; ordListAdd( "&DiretoriodeDados\DPAIND01.IGD" ); ordListAdd( "&DiretoriodeDados\DPAIND02.IGD" ); ordListAdd( "&DiretoriodeDados\DPAIND03.IGD" ); ordListAdd( "&DiretoriodeDados\DPAIND04.IGD" ); ordListAdd( "&DiretoriodeDados\DPAIND05.IGD" )
   ELSE



      if !.F. ; ordListClear() ; end; ordListAdd( "&DiretoriodeDados\DPAIND01.IGD" ); ordListAdd( "&DiretoriodeDados\DPAIND02.IGD" ); ordListAdd( "&DiretoriodeDados\DPAIND03.IGD" ); ordListAdd( "&DiretoriodeDados\DPAIND04.IGD" )
   ENDIF
   DBSetOrder( 2 )
   DBGotop()
   DBSelectAr( 11 )
   dbUseArea( .F., "DBFNTX", "&DiretoriodeDados\CONDICAO.VPB", "CND", if(.T. .OR. .F., !.F., NIL), .F. )

   if !.F. ; ordListClear() ; end; ordListAdd( "&DiretoriodeDados\CNDIND01.IGD" ); ordListAdd( "&DiretoriodeDados\CNDIND02.IGD" )
   DBSetOrder( 1 )
   IF !DBSeek( nForma )
      DBGoTop()
   ENDIF
   DBSetOrder( 2 )


   SWGBox( 220, 220, 1250, 800, "Pesquisa as Condicoes de Pagamento", 15 )
   Mensagem()
   oTB:=TBrowseDB( nLin1, nCol1, nLin2, nCol2 )
   oTB:AddColumn( TBColumnNew(, {|| StrZero( CND->CODIGO, 3, 0 ) + " - " + Left( CND->DESCRI, 45 ) + Space( 30 ) } ) )
   oTB:AUTOLITE:=.F.
   oTB:DehiLite()

   oTb:RefreshAll()
   WHILE !oTB:Stabilize()
   ENDDO

   WHILE .T.
       oTB:colorrect({oTB:ROWPOS,1,oTB:ROWPOS,1},{3,1})
       WHILE !oTb:Stabilize()
       ENDDO

       IF !( cBusca == "" )
          Mensagem( "Pesquisa " + cBusca )
       ELSE
          Mensagem( CND->DESCRI )
       ENDIF
       nTecla:=inkey(0)

       IF !UPPER( Chr( nTecla ) ) $ "ABCDEFGHIJKLMNOPQRSTUVXYZW0123456789 &"
          cBusca:= ""
       ENDIF
       If nTecla=27
          exit
       EndIf
       do case
          CASE nTecla==5         ;oTB:up()
          CASE nTecla==19       ;oTB:up()
          CASE nTecla==4      ;oTB:down()
          CASE nTecla==24       ;oTB:down()
          CASE nTecla==18       ;oTB:pageup()
          CASE nTecla==3       ;oTB:pagedown()
          CASE nTecla==31  ;oTB:gotop()
          CASE nTecla==30  ;oTB:gobottom()
          CASE UPPER( Chr( nTecla ) ) $ "ABCDEFGHIJKLMNOPQRSTUVXYZW0123456789 &"
               IF Chr( nTecla ) $ "0123456789"
                  DBSetOrder( 1 )
               ELSE
                  DBSetOrder( 2 )
               ENDIF
               cBusca:= cBusca + UPPER( Chr( nTecla ) )
               IF IndexOrd()==2
                  DBSeek( UPPER( cBusca ), .T. )
               ELSE
                  DBSeek( VAL( cBusca ) )
               ENDIF
               oTb:RefreshAll()
               WHILE !oTb:Stabilize()
               ENDDO
          CASE nTecla==13
               nVezes:= 0
               cForma := CND -> DESCRI
               AAdd( aParcelas, { 100, PARCA_, nValorPagar, DATE() + PARCA_, CTOD( "  /  /  " ), 0, Space( 15 ), 0 } )
               ++nVezes
               IF !PARCB_ == 0
                  AAdd( aParcelas, { 100, PARCB_, nValorPagar, DATE() + PARCB_, CTOD( "  /  /  " ), 0, Space( 15 ), 0 } )
                  ++nVezes
                  IF !PARCC_ == 0
                     AAdd( aParcelas, { 100, PARCC_, nValorPagar, DATE() + PARCC_, CTOD( "  /  /  " ), 0, Space( 15 ), 0 } )
                     ++nVezes
                     IF !PARCD_ == 0
                        AAdd( aParcelas, { 100, PARCD_, nValorPagar, DATE() + PARCD_, CTOD( "  /  /  " ), 0, Space( 15 ), 0 } )
                        ++nVezes
                        IF !PARCE_ == 0
                           AAdd( aParcelas, { 100, PARCE_, nValorPagar, DATE() + PARCE_, CTOD( "  /  /  " ), 0, Space( 15 ), 0 } )
                           ++nVezes
                           IF !PARCF_ == 0
                              AAdd( aParcelas, { 100, PARCF_, nValorPagar, DATE() + PARCF_, CTOD( "  /  /  " ), 0, Space( 15 ), 0 } )
                              ++nVezes
                              IF !PARCG_ == 0
                                 AAdd( aParcelas, { 100, PARCG_, nValorPagar, DATE() + PARCG_, CTOD( "  /  /  " ), 0, Space( 15 ), 0 } )
                                 ++nVezes
                                 IF !PARCH_ == 0
                                    AAdd( aParcelas, { 100, PARCH_, nValorPagar, DATE() + PARCH_, CTOD( "  /  /  " ), 0, Space( 15 ), 0 } )
                                    ++nVezes
                                    IF !PARCI_ == 0
                                       AAdd( aParcelas, { 100, PARCI_, nValorPagar, DATE() + PARCI_, CTOD( "  /  /  " ), 0, Space( 15 ), 0 } )
                                       ++nVezes
                                       IF !PARCJ_ == 0
                                          AAdd( aParcelas, { 100, PARCJ_, nValorPagar, DATE() + PARCJ_, CTOD( "  /  /  " ), 0, Space( 15 ), 0 } )
                                          ++nVezes
                                          IF !PARCK_ == 0
                                             AAdd( aParcelas, { 100, PARCK_, nValorPagar, DATE() + PARCK_, CTOD( "  /  /  " ), 0, Space( 15 ), 0 } )
                                             ++nVezes
                                             IF !PARCL_ == 0
                                                AAdd( aParcelas, { 100, PARCL_, nValorPagar, DATE() + PARCL_, CTOD( "  /  /  " ), 0, Space( 15 ), 0 } )
                                                ++nVezes
                                                IF !PARCM_ == 0
                                                   AAdd( aParcelas, { 100, PARCM_, nValorPagar, DATE() + PARCM_, CTOD( "  /  /  " ), 0, Space( 15 ), 0 } )
                                                   ++nVezes
                                                ENDIF
                                             ENDIF
                                          ENDIF
                                       ENDIF
                                    ENDIF
                                 ENDIF
                              ENDIF
                           ENDIF
                        ENDIF
                     ENDIF
                  ENDIF
               ENDIF


               nPercentual:= ( 100 - PERCA_ ) / ( nVezes - 1 )
               aParcelas[ 1 ][ 1 ]:= PERCA_
               aParcelas[ 1 ][ 3 ]:= ( nValorPagar * PERCA_ ) / 100


               FOR nCt:= 2 TO Len( aParcelas )
                   IF LEN( aParcelas ) > nVezes
                      ADEL( aParcelas, nVezes + 1 )
                      ASIZE( aParcelas, Len( aParcelas ) - 1 )
                   ELSE
                      aParcelas[ nCt ][ 1 ]:= nPercentual
                      aParcelas[ nCt ][ 3 ]:= ( nValorPagar * nPercentual ) / 100
                   ENDIF
               NEXT

               oTb:RefreshAll()
               WHILE !oTB:stabilize()
               ENDDO
               lDisplay:= .F.
               nForma:= CODIGO
               Exit

          OTHERWISE                ;tone(125); tone(300)
      ENDCASE
      oTB:refreshcurrent()
      oTB:stabilize()
   ENDDO
   DBSelectAr( 11 )
   DBCloseArea()
   DBSelectAr( 17 )
   DBCloseArea()
   DBSelectAr( nArea )
   SWSnapPaste( 50, 100, nSaveFP )
   SWSnapKill( nSaveFP )
   SetColor (nColor)
   Return .T.













Function CalcVenc( dDataBase, nDias, dDataVencimento, nPercentual, nValorPagar )
   dDataVencimento:= dDataBase + nDias
Return .T.













Function CalcParcela( nValorPagar, nPercentual, nParcela, lManual, nPercAnt )
IF !lManual
   IF (nPercentual == 0)
       nPercentual := nPercAnt
   ENDIF
   nParcela:= ( nValorPagar * nPercentual ) / 100
   SetColor( "01/15" )
   DevPos( 09, 31 ) ; DevOutPict( nPercentual, "999.99%" )
   DevPos( 11, 31 ) ; DevOutPict( nParcela, "@E 9999,999.99" )
   SetColor( "08/15,01/15" )
ENDIF
Return .T.



Function fCalcPerc (nPercentual, nValorPagar, nParcela )
   nPercentual := ( nParcela / nValorPagar ) * 100
   SetColor( "01/15" )
   DevPos( 09, 31 ) ; DevOutPict( nPercentual, "999.99%" )
   SetColor( "08/15,01/15" )
Return .T.












Function LancaCupom( nCliCodigo, cCliDescri, cCliEndere, cCliBairro, cCliCidade, cCliEstado, nValorPagar, nVendedor )
Local nValorIcm:= 0, nValorIpi:= 0, nValorBase:= 0
  DBSelectAr( 18 )
  IF !USED()
     dbUseArea( .F., "DBFNTX", "&DiretoriodeDados\CUPOM___.VPB", "CUP", if(.T. .OR. .F., !.F., NIL), .F. )



     if !.F. ; ordListClear() ; end; ordListAdd( "&DiretoriodeDados\CUPIND01.IGD" ); ordListAdd( "&DiretoriodeDados\CUPIND02.IGD" ); ordListAdd( "&DiretoriodeDados\CUPIND03.IGD" ); ordListAdd( "&DiretoriodeDados\CUPIND04.IGD" )
  ENDIF
  DBSelectAr( 19 )
  IF !USED()
     dbUseArea( .F., "DBFNTX", "&DiretoriodeDados\CUPOMAUX.VPB", "CPA", if(.T. .OR. .F., !.F., NIL), .F. )




     if !.F. ; ordListClear() ; end; ordListAdd( "&DiretoriodeDados\CAUIND01.IGD" ); ordListAdd( "&DiretoriodeDados\CAUIND02.IGD" ); ordListAdd( "&DiretoriodeDados\CAUIND03.IGD" ); ordListAdd( "&DiretoriodeDados\CAUIND04.IGD" ); ordListAdd( "&DiretoriodeDados\CAUIND05.IGD" )
  ENDIF
  DBSelectAr( 123 )
  DBGoTop()
  WHILE !EOF()
      IF MPR->( DBSeek( VDA->INDICE ) ) .AND. VDA->STATUS==" "
         CPA->( DBAppend() )
         IF CPA->( RLock() )
            _FIELD->CPA->CODIGO := VDA->INDICE ;IIF( FIELDPOS( "FILIAL" ) > 0, IF( _FIELD->FILIAL==0, _FIELD->FILIAL:= CodigoFilial, Nil ), Nil )
            _FIELD->CPA->CODRED := VDA->INDICE ;IIF( FIELDPOS( "FILIAL" ) > 0, IF( _FIELD->FILIAL==0, _FIELD->FILIAL:= CodigoFilial, Nil ), Nil )
            _FIELD->CPA->CODIGO := VDA->INDICE ;IIF( FIELDPOS( "FILIAL" ) > 0, IF( _FIELD->FILIAL==0, _FIELD->FILIAL:= CodigoFilial, Nil ), Nil )
            _FIELD->CPA->DESCRI := VDA->DESCRI ;IIF( FIELDPOS( "FILIAL" ) > 0, IF( _FIELD->FILIAL==0, _FIELD->FILIAL:= CodigoFilial, Nil ), Nil )
            _FIELD->CPA->MPRIMA := MPR->MPRIMA ;IIF( FIELDPOS( "FILIAL" ) > 0, IF( _FIELD->FILIAL==0, _FIELD->FILIAL:= CodigoFilial, Nil ), Nil )
            _FIELD->CPA->UNIDAD := VDA->UNIDAD ;IIF( FIELDPOS( "FILIAL" ) > 0, IF( _FIELD->FILIAL==0, _FIELD->FILIAL:= CodigoFilial, Nil ), Nil )
            _FIELD->CPA->QUANT_ := VDA->QUANT_ ;IIF( FIELDPOS( "FILIAL" ) > 0, IF( _FIELD->FILIAL==0, _FIELD->FILIAL:= CodigoFilial, Nil ), Nil )
            _FIELD->CPA->PRECOV := VDA->PRECOV ;IIF( FIELDPOS( "FILIAL" ) > 0, IF( _FIELD->FILIAL==0, _FIELD->FILIAL:= CodigoFilial, Nil ), Nil )
            _FIELD->CPA->DATA__ := DATE() ;IIF( FIELDPOS( "FILIAL" ) > 0, IF( _FIELD->FILIAL==0, _FIELD->FILIAL:= CodigoFilial, Nil ), Nil )
            _FIELD->CPA->PRECOT := VDA->PRECOT ;IIF( FIELDPOS( "FILIAL" ) > 0, IF( _FIELD->FILIAL==0, _FIELD->FILIAL:= CodigoFilial, Nil ), Nil )
            _FIELD->CPA->CODNF_ := VAL( Str( CodigoCaixa, 3, 0 ) + NumeroCupom() ) ;IIF( FIELDPOS( "FILIAL" ) > 0, IF( _FIELD->FILIAL==0, _FIELD->FILIAL:= CodigoFilial, Nil ), Nil )
         ENDIF
         IF !( MPR->IPICOD==4 )
            nValorIcm:=  nValorIcm + ( CPA->PRECOT * Icm ) / 100
            nValorBase:= nValorIcm + ( CPA->PRECOT )
         ENDIF
         CPA->( DBUnlock() )
      ENDIF
      DBSkip()
  ENDDO
  IF VDA->( LastRec() ) <= 0
     DBSelectAR( 10 )
     Return Nil
  ENDIF
  DBSelectAr( 18 )
  DBAppend()
  IF !NetErr()















     _FIELD->TIPONF := "S"; _FIELD->NATOPE := 5.12; _FIELD->NUMERO := Val( Str( CodigoCaixa, 3, 0 ) + NumeroCupom() ); _FIELD->CLIENT := nCliCodigo; _FIELD->CDESCR := cCliDescri; _FIELD->CENDER := cCliEndere; _FIELD->CCIDAD := cCliCidade; _FIELD->CESTAD := cCliEstado; _FIELD->VLRNOT := nValorPagar; _FIELD->VLRTOT := nValorPagar; _FIELD->VLRICM := nValorIcm; _FIELD->VLRIPI := nValorIPI; _FIELD->BASICM := nValorBase; _FIELD->FUNC__ := CodigoCaixa; _FIELD->DATAEM := DATE(); _FIELD->VENIN_ := nVendedor ;IIF( FIELDPOS( "FILIAL" ) > 0, IF( _FIELD->FILIAL==0, _FIELD->FILIAL:= CodigoFilial, Nil ), Nil )
  ENDIF
  DBSelectAr( 10 )
  Return Nil












Function LancaEmCaixa( nRecebido )
Local nCt
  DBSelectAr( 16 )
  dbUseArea( .F., "DBFNTX", "&DiretorioDeDadis\CAIXA___.VPB", "CX", if(.T. .OR. .F., !.F., NIL), .F. )
  if !.F. ; ordListClear() ; end; ordListAdd( "&DiretoriodeDados\CX_IND01.IGD" )
  DBAppend()
  IF !NetErr()







     _FIELD->DATAMV := DATE(); _FIELD->VENDE_ := CodigoCaixa; _FIELD->ENTSAI := "+"; _FIELD->MOTIVO := 00; _FIELD->HISTOR := "CF: " + Str( CodigoCaixa, 3, 0 ) + NumeroCupom(); _FIELD->VALOR_ := nRecebido; _FIELD->HORAMV := TIME(); _FIELD->CDUSER := 0 ;IIF( FIELDPOS( "FILIAL" ) > 0, IF( _FIELD->FILIAL==0, _FIELD->FILIAL:= CodigoFilial, Nil ), Nil )
  ENDIF
  DBSelectAr( 10 )
  Return Nil

Function CancelaCaixa( nRecebido )
  DBSelectAr( 16 )
  dbUseArea( .F., "DBFNTX", "&DiretorioDeDadis\CAIXA___.VPB", "CX", if(.T. .OR. .F., !.F., NIL), .F. )
  if !.F. ; ordListClear() ; end; ordListAdd( "&DiretoriodeDados\CX_IND01.IGD" )
  DBAppend()
  IF !NetErr()







     _FIELD->DATAMV := DATE(); _FIELD->VENDE_ := CodigoCaixa; _FIELD->ENTSAI := "-"; _FIELD->MOTIVO := 00; _FIELD->HISTOR := "CF: " + Str( CodigoCaixa, 3, 0 ) + NumeroCupom() + "-CANCELADO!"; _FIELD->VALOR_ := nRecebido; _FIELD->HORAMV := TIME(); _FIELD->CDUSER := 0 ;IIF( FIELDPOS( "FILIAL" ) > 0, IF( _FIELD->FILIAL==0, _FIELD->FILIAL:= CodigoFilial, Nil ), Nil )
  ENDIF
  DBCloseArea()
  DBSelectAr( 10 )
  Return Nil












Function LancaEstoque(nRegAtuCli, nRegAtuEAN)
Local nCt

  IF (nRegAtuCli <> 0)
     CLI->( DBGoTo( nRegAtuCli ) )
  ENDIF

  DBSelectAr( 12 )
  dbUseArea( .F., "DBFNTX", "&DiretorioDeDados\CESTOQUE.VPB", "EST", if(.T. .OR. .F., !.F., NIL), .F. )



  if !.F. ; ordListClear() ; end; ordListAdd( "&DiretoriodeDados\ESTIND01.IGD" ); ordListAdd( "&DiretoriodeDados\ESTIND02.IGD" ); ordListAdd( "&DiretoriodeDados\ESTIND03.IGD" ); ordListAdd( "&DiretoriodeDados\ESTIND04.IGD" )

  MPR->( DBSetOrder( 1 ) )
  DBSelectAr( 123 )
  DBGoTop()
  WHILE !EOF()
      IF STATUS==" " .OR. STATUS=="E" .OR. STATUS=="X"
         IF MPR->( DBSeek( VDA->INDICE ) )
            IF MPR->( RLock() )
               IF VDA->STATUS==" " .OR. VDA->STATUS=="X"

                  _FIELD->MPR->SALDO_ := MPR->SALDO_ - VDA->QUANT_ ;IIF( FIELDPOS( "FILIAL" ) > 0, IF( _FIELD->FILIAL==0, _FIELD->FILIAL:= CodigoFilial, Nil ), Nil )
               ELSE

                  _FIELD->MPR->SALDO_ := MPR->SALDO_ + VDA->QUANT_ ;IIF( FIELDPOS( "FILIAL" ) > 0, IF( _FIELD->FILIAL==0, _FIELD->FILIAL:= CodigoFilial, Nil ), Nil )
               ENDIF
            ENDIF
            DBUnlockAll()
         ENDIF
         EST->( DBAppend() )
         IF EST->( RLock() )













            _FIELD->EST->CPROD_ := VDA->INDICE; _FIELD->EST->CODRED := VDA->INDICE; _FIELD->EST->ENTSAI := IF( VDA->STATUS==" " .OR. VDA->STATUS=="X","-","+" ); _FIELD->EST->QUANT_ := VDA->QUANT_; _FIELD->EST->DOC___ := "CF: " + Str( CodigoCaixa, 3, 0 ) + NumeroCupom() + IF( VDA->STATUS==" " .OR. VDA->STATUS=="X"," "," C" ); _FIELD->EST->CODIGO := 0; _FIELD->EST->VLRSDO := 0; _FIELD->EST->VALOR_ := VDA->PRECOT; _FIELD->EST->DATAMV := Date(); _FIELD->EST->RESPON := 0; _FIELD->EST->PCPCLA := VDA->PCPCLA; _FIELD->EST->PCPTAM := VDA->PCPTAM; _FIELD->EST->PCPCOR := VDA->PCPCOR ;IIF( FIELDPOS( "FILIAL" ) > 0, IF( _FIELD->FILIAL==0, _FIELD->FILIAL:= CodigoFilial, Nil ), Nil )
            IF !MPR->MPRIMA=="S"
               LancaMontagem( VDA->INDICE, IF( VDA->STATUS==" " .OR. VDA->STATUS=="X","-","+" ), VDA->QUANT_, "CF: " + Str( CodigoCaixa, 3, 0 ) + NumeroCupom() + IF( VDA->STATUS==" " .OR. VDA->STATUS=="X"," "," C" ) )
            ENDIF
         ENDIF
         DBUnlockAll()

         EAN -> (DBSetOrder (3)) 

         IF (EAN -> (DBSeek (VDA -> INDICE + STR (VDA -> PCPCLA, 3) +  STR (VDA -> PCPTAM, 2) + STR (VDA -> PCPCOR, 3))) == .T.)
            IF EAN->( Rlock() )
               IF VDA->STATUS==" " .OR. VDA->STATUS=="X"
                  _FIELD->EAN->SALDO_ := EAN->SALDO_ - VDA->QUANT_ ;IIF( FIELDPOS( "FILIAL" ) > 0, IF( _FIELD->FILIAL==0, _FIELD->FILIAL:= CodigoFilial, Nil ), Nil )
               ELSE
                  _FIELD->EAN->SALDO_ := EAN->SALDO_ + VDA->QUANT_ ;IIF( FIELDPOS( "FILIAL" ) > 0, IF( _FIELD->FILIAL==0, _FIELD->FILIAL:= CodigoFilial, Nil ), Nil )
               ENDIF
            ENDIF
            EAN->( DBUnlock() )
         ENDIF

         IF (nRegAtuCli <> 0)
            IF CLI->( Rlock() )
               IF VDA->STATUS==" " .OR. VDA->STATUS=="X"
                  CLI->SALDO_-=VDA->PRECOT
               ELSE
                  CLI->SALDO_+=VDA->PRECOT
               ENDIF
            ENDIF
            CLI->( DBUnlock() )
         ENDIF
      ENDIF
      VDA->( DBSkip() )
  ENDDO
  DBSelectAr( 12 )
  dbCloseArea()
  DBSelectAr( 10 )
  DBSetOrder( 1 )
  Return Nil

Function LancaMontagem( cIndice, cEntSai, nQuantidade, cDoc )
 Local nArea:= Select()
 Local nRegistro:= MPR->( RECNO() )
 Local cProduto:= cIndice


 MPR->( DBSetOrder( 1 ) )
 DBSelectAr( 23 )
 IF !Used()
    dbUseArea( .F., "DBFNTX", "&DiretorioDeDados\MONTAGEM.VPB", "ASM", if(.T. .OR. .F., !.F., NIL), .F. )
    if !.F. ; ordListClear() ; end; ordListAdd( "&DiretorioDeDados\ASMIND01.IGD" ); ordListAdd( "&DiretorioDeDados\ASMIND02.IGD" )
 ENDIF
 DBSetOrder( 1 )
 IF DBSeek( cProduto )
    WHILE ASM->CODPRD == cProduto
        DBSelectAr( 12 )
        MPR->( DBSeek( ASM->CODMPR ) )
        IF MPR->( Rlock() )
           IF cEntSai=="+"
              _FIELD->MPR->SALDO_ := MPR->SALDO_ + ( nQuantidade * ASM->QUANT_ ) ;IIF( FIELDPOS( "FILIAL" ) > 0, IF( _FIELD->FILIAL==0, _FIELD->FILIAL:= CodigoFilial, Nil ), Nil )
           ELSE
              _FIELD->MPR->SALDO_ := MPR->SALDO_ - ( nQuantidade * ASM->QUANT_ ) ;IIF( FIELDPOS( "FILIAL" ) > 0, IF( _FIELD->FILIAL==0, _FIELD->FILIAL:= CodigoFilial, Nil ), Nil )
           ENDIF
        ENDIF
        EST->( dbappend() )
        IF EST->( Rlock() )
           _FIELD->EST->CPROD_ := ASM->CODMPR ;IIF( FIELDPOS( "FILIAL" ) > 0, IF( _FIELD->FILIAL==0, _FIELD->FILIAL:= CodigoFilial, Nil ), Nil )
           _FIELD->EST->CODRED := ASM->CODMPR ;IIF( FIELDPOS( "FILIAL" ) > 0, IF( _FIELD->FILIAL==0, _FIELD->FILIAL:= CodigoFilial, Nil ), Nil )
           _FIELD->EST->ENTSAI := cEntSai ;IIF( FIELDPOS( "FILIAL" ) > 0, IF( _FIELD->FILIAL==0, _FIELD->FILIAL:= CodigoFilial, Nil ), Nil )
           _FIELD->EST->DOC___ := ALLTrim( cDoc ) + "CM" ;IIF( FIELDPOS( "FILIAL" ) > 0, IF( _FIELD->FILIAL==0, _FIELD->FILIAL:= CodigoFilial, Nil ), Nil )
           _FIELD->EST->CODIGO := 0 ;IIF( FIELDPOS( "FILIAL" ) > 0, IF( _FIELD->FILIAL==0, _FIELD->FILIAL:= CodigoFilial, Nil ), Nil )
           _FIELD->EST->VLRSDO := 0 ;IIF( FIELDPOS( "FILIAL" ) > 0, IF( _FIELD->FILIAL==0, _FIELD->FILIAL:= CodigoFilial, Nil ), Nil )
           _FIELD->EST->VLRSAI := 0 ;IIF( FIELDPOS( "FILIAL" ) > 0, IF( _FIELD->FILIAL==0, _FIELD->FILIAL:= CodigoFilial, Nil ), Nil )
           _FIELD->EST->QUANT_ := nQuantidade * ASM->QUANT_ ;IIF( FIELDPOS( "FILIAL" ) > 0, IF( _FIELD->FILIAL==0, _FIELD->FILIAL:= CodigoFilial, Nil ), Nil )
           _FIELD->EST->DATAMV := DATE() ;IIF( FIELDPOS( "FILIAL" ) > 0, IF( _FIELD->FILIAL==0, _FIELD->FILIAL:= CodigoFilial, Nil ), Nil )
        ENDIF
        ASM->( DBSkip() )
    ENDDO
 ENDIF
 MPR->( DBGoTo( nRegistro ) )
 DBSelectAr( nArea )
 Return Nil










Function RetornaEstoque()
Local nCt
  DBSelectAr( 12 )
  dbUseArea( .F., "DBFNTX", "&DiretorioDeDados\CESTOQUE.VPB", "EST", if(.T. .OR. .F., !.F., NIL), .F. )



  if !.F. ; ordListClear() ; end; ordListAdd( "&DiretoriodeDados\ESTIND01.IGD" ); ordListAdd( "&DiretoriodeDados\ESTIND02.IGD" ); ordListAdd( "&DiretoriodeDados\ESTIND03.IGD" ); ordListAdd( "&DiretoriodeDados\ESTIND04.IGD" )
  MPR->( DBSetOrder( 1 ) )
  DBSelectAr( 123 )
  DBGoTop()
  WHILE !EOF()
      IF STATUS==" "
         IF MPR->( DBSeek( VDA->INDICE ) )
            IF MPR->( RLock() )
               _FIELD->MPR->SALDO_ := MPR->SALDO_ + VDA->QUANT_ ;IIF( FIELDPOS( "FILIAL" ) > 0, IF( _FIELD->FILIAL==0, _FIELD->FILIAL:= CodigoFilial, Nil ), Nil )
            ENDIF
            DBUnlockAll()
         ENDIF
         EST->( DBAppend() )
         IF EST->( RLock() )












            _FIELD->EST->CPROD_ := VDA->INDICE; _FIELD->EST->CODRED := VDA->INDICE; _FIELD->EST->ENTSAI := "+"; _FIELD->EST->QUANT_ := VDA->QUANT_; _FIELD->EST->DOC___ := "CF: " + Str( CodigoCaixa, 3, 0 ) + NumeroCupom() + " Cancelamento"; _FIELD->EST->CODIGO := 0; _FIELD->EST->VLRSDO := 0; _FIELD->EST->VALOR_ := VDA->PRECOT; _FIELD->EST->DATAMV := Date(); _FIELD->EST->RESPON := 0; _FIELD->EST->PCPCLA := VDA->PCPCLA; _FIELD->EST->PCPTAM := VDA->PCPTAM; _FIELD->EST->PCPCOR := VDA->PCPCOR ;IIF( FIELDPOS( "FILIAL" ) > 0, IF( _FIELD->FILIAL==0, _FIELD->FILIAL:= CodigoFilial, Nil ), Nil )
            IF !MPR->MPRIMA=="S"
               LancaMontagem( VDA->INDICE, "+", VDA->QUANT_, "CF: " + Str( CodigoCaixa, 3, 0 ) + NumeroCupom() + IF( VDA->STATUS==" " .OR. VDA->STATUS=="X"," "," CANCELA" ) )
            ENDIF
         ENDIF
         DBUnlockAll()
         EAN->( DBSetOrder( 3 ) )

         IF ( EAN->( DBSeek( VDA->INDICE + STR( VDA ->PCPCLA, 3 ) +  STR( VDA->PCPTAM, 2) + STR( VDA->PCPCOR, 3 ) ) ) == .T.)
            EAN->( Rlock() )
            IF !EAN->( NetErr() )
                EAN->SALDO_+=VDA->QUANT_
            ENDIF
            EAN->( DBUnlock() )
         ENDIF
      ENDIF
      VDA->( DBSkip() )
  ENDDO
  DBSelectAr( 10 )
  DBSetOrder( 1 )
  Return Nil


   Function fFim ()

      aFile := DIRECTORY ("*.$$$")
      AEVAL (aFile, { | x | FERASE ( x [1])})
      SetText()

   Return (.T.)



   Function fValorPago (nValorPago, nValorPagar)

      Local lRet := .T.

      IF (nValorPago >= nValorPagar * 2)

         WHILE (.T.)












            SWGAviso( "VALOR PAGO", {{0, " "}, {0, "   O valor pago esta muito elevado !"}, {0, " "}, {1, "           R$ " +  ALLTRIM (TRAN (nValorPago, "@E 99,999,999.99" )) +  " paga R$ " +  ALLTRIM (TRAN (nValorPagar, "@E 99,999,999.99" )) + " ?"} , {0, " "}, {0, "   Para CONFIRMAR este valor, acione a tecla [ENTER]"}, {0, " "}, {0, "   Para REDIGITAR o valor correto, acione a tecla [ESC]"}, {0, " "}}, 7, 4, 300, 200, 800, 1220)
            IF (LASTKEY () == 13)
               EXIT
            ELSE
               IF (LASTKEY () == 27)
                  lRet := .F.
                  EXIT
               ENDIF
            ENDIF
         END

      ENDIF

   Return (lRet)



   Function fAuxilio (cVersao)










      SWGAviso( "AUXILIO                                                              1 de 3", {{0, "   Saida do PDV  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . [ESC]"}, {0, "   Quantidade Diferenciada . . . . . . . . . . . . . . . . . . . . . . . . . [F1]"}, {0, "   Desconto  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  [F3]"}, {0, "   Cancelamento de Item  . . . . . . . . . . . . . . . . . . . . . . . . . . [F4]"}, {0, "   Venda . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . [ENTER]"}, {0, "   Cliente . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . [F8]"}, {0, "   Formas de Pagamento . . . . . . . . . . . . . . . . . . . . . . . . . . . [F7]"}, {0, "   Fechamento do Cupom . . . . . . . . . . . . . . . . . . . . . . . . . . . [F6]"}, {0, " "}}, 7, 1, 300, 200, 800, 1220)

      IF (LASTKEY () == 27)
         RETURN (.T.)
      ENDIF










      SWGAviso( "AUXILIO                                                              2 de 3", {{0, "   Observacoes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . [F11]"}, {0, "   Anulacao de Cupom . . . . . . . . . . . . . . . . . . . . . . . . . . . . . [F10]"}, {0, "   Limpeza do Buffer do Cupom  . . . . . . . . . . . . . . . .  [CTRL+F12]"}, {0, "   Autenticacao  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  [F9]"}, {0, "   Abertura de Gaveta  . . . . . . . . . . . . . . . . . . . . . . . . . . [F5]"}, {0, "   Numero do Cupom Atual . . . . . . . . . . . . . . . . . . . . .  [CTRL+F7]"}, {0, "   SubTotal na Impressora  . . . . . . . . . . . . . . . . . . . . . . . .  [CTRL_F5]"}, {0, "   Consulta Itens . . . . . . . . . . . . . . . . . . . . . . . . . . . . [CTRL+F1]"}, {0, " "}}, 7, 1, 300, 200, 800, 1220)

      IF (LASTKEY () == 27)
         RETURN (.T.)
      ENDIF










      SWGAviso( "AUXILIO                                                              3 de 3", {{0, "   Confirmacao de Preco . . . . . . . . . . . . . . . . . . . . . . . . . . [F12]"}, {0, "   Auxilio  . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . [HOME]"}, {0, "   Edicao da Configuracao do Sistema (PDV.INI)  . . . " +  " [CTRL+TAB]"}, {0, " "}, {0, "     Obs. : 1) As teclas [F10] e [CTRL+F10] sao identicas"}, {0, "            2) As teclas [HOME] e [CTRL+A] sao identicas"}, {0, " "}, {0, " "}}, 7, 1, 300, 200, 800, 1220)

   Return (.T.)













Function LancaReceber( aParcelas, nCliCodigo, cCliDescri )
   DBSelectAr( 17 )
   dbUseArea( .F., "DBFNTX", "&DiretoriodeDados\CDDUPAUX.VPB", "DPA", if(.T. .OR. .F., !.F., NIL), .F. )
   IF File( DiretoriodeDados + "\DPAIND05.IGD" )




      if !.F. ; ordListClear() ; end; ordListAdd( "&DiretoriodeDados\DPAIND01.IGD" ); ordListAdd( "&DiretoriodeDados\DPAIND02.IGD" ); ordListAdd( "&DiretoriodeDados\DPAIND03.IGD" ); ordListAdd( "&DiretoriodeDados\DPAIND04.IGD" ); ordListAdd( "&DiretoriodeDados\DPAIND05.IGD" )
   ELSE



      if !.F. ; ordListClear() ; end; ordListAdd( "&DiretoriodeDados\DPAIND01.IGD" ); ordListAdd( "&DiretoriodeDados\DPAIND02.IGD" ); ordListAdd( "&DiretoriodeDados\DPAIND03.IGD" ); ordListAdd( "&DiretoriodeDados\DPAIND04.IGD" )
   ENDIF
   DBSetOrder( 1 )
   FOR nCt:= 1 TO Len( aParcelas )
       DBAppend()
       IF RLock()
          nCodCli:= 0
















          _FIELD->CODNF_ := VAL( Str( CodigoCaixa, 3, 0 ) + NumeroCupom() ); _FIELD->DUPL__ := VAL( Str( CodigoCaixa, 3, 0 ) + NumeroCupom() ); _FIELD->LETRA_ := Chr( nCt + 64 ); _FIELD->PERC__ := aParcelas[ nCt ][ 1 ]; _FIELD->VLR___ := aParcelas[ nCt ][ 3 ]; _FIELD->PRAZ__ := aParcelas[ nCt ][ 2 ]; _FIELD->BANC__ := aParcelas[ nCt ][ 6 ]; _FIELD->CHEQ__ := aParcelas[ nCt ][ 7 ]; _FIELD->VENC__ := aParcelas[ nCt ][ 4 ]; _FIELD->DTQT__ := aParcelas[ nCt ][ 5 ]; _FIELD->TIPO__ := "03"; _FIELD->DATAEM := DATE(); _FIELD->FUNC__ := CodigoCaixa; _FIELD->OBS___ := DTOC(DATE()) + "|" + TIME() + "/" + StrZero( CodigoCaixa, 3, 0 ); _FIELD->CLIENT := nCliCodigo; _FIELD->CDESCR := cCliDescri; _FIELD->LOCAL_ := aParcelas[ nCt ][ 8 ] ;IIF( FIELDPOS( "FILIAL" ) > 0, IF( _FIELD->FILIAL==0, _FIELD->FILIAL:= CodigoFilial, Nil ), Nil )
       ENDIF
   NEXT
   DBCloseArea()
   Return Nil











Function CancelaReceber()
Local nArea:= Select()
   DBSelectAr( 17 )
   dbUseArea( .F., "DBFNTX", "&DiretoriodeDados\CDDUPAUX.VPB", "DPA", if(.T. .OR. .F., !.F., NIL), .F. )
   IF File( DiretoriodeDados + "\DPAIND05.IGD" )




      if !.F. ; ordListClear() ; end; ordListAdd( "&DiretoriodeDados\DPAIND01.IGD" ); ordListAdd( "&DiretoriodeDados\DPAIND02.IGD" ); ordListAdd( "&DiretoriodeDados\DPAIND03.IGD" ); ordListAdd( "&DiretoriodeDados\DPAIND04.IGD" ); ordListAdd( "&DiretoriodeDados\DPAIND05.IGD" )
   ELSE



      if !.F. ; ordListClear() ; end; ordListAdd( "&DiretoriodeDados\DPAIND01.IGD" ); ordListAdd( "&DiretoriodeDados\DPAIND02.IGD" ); ordListAdd( "&DiretoriodeDados\DPAIND03.IGD" ); ordListAdd( "&DiretoriodeDados\DPAIND04.IGD" )
   ENDIF
   DBSetOrder( 1 )
   IF DBSeek( Val( StrZero( CodigoCaixa, 03, 00 ) + NumeroCupom() ) )
      WHILE CODNF_== Val( StrZero( CodigoCaixa, 03, 00 ) + NumeroCupom() )
         IF TIPO__=="03"
            IF Rlock()
               _FIELD->NFNULA := "*" ;IIF( FIELDPOS( "FILIAL" ) > 0, IF( _FIELD->FILIAL==0, _FIELD->FILIAL:= CodigoFilial, Nil ), Nil )
            ENDIF
         ENDIF
         DBSkip()
      ENDDO
   ENDIF
   DBCloseArea()
   DBSelectAr( nArea )
   Return Nil




   Function LanRecMoeDiv( aMoedas, nCliCodigo, cCliDescri, nPerAcrDes,  cAcrDes  )

      DBSelectAr( 17 )
      dbUseArea( .F., "DBFNTX", "&DiretoriodeDados\CDDUPAUX.VPB", "DPA", if(.T. .OR. .F., !.F., NIL), .F. )
      IF File( DiretoriodeDados + "\DPAIND05.IGD" )




         if !.F. ; ordListClear() ; end; ordListAdd( "&DiretoriodeDados\DPAIND01.IGD" ); ordListAdd( "&DiretoriodeDados\DPAIND02.IGD" ); ordListAdd( "&DiretoriodeDados\DPAIND03.IGD" ); ordListAdd( "&DiretoriodeDados\DPAIND04.IGD" ); ordListAdd( "&DiretoriodeDados\DPAIND05.IGD" )
      ELSE



         if !.F. ; ordListClear() ; end; ordListAdd( "&DiretoriodeDados\DPAIND01.IGD" ); ordListAdd( "&DiretoriodeDados\DPAIND02.IGD" ); ordListAdd( "&DiretoriodeDados\DPAIND03.IGD" ); ordListAdd( "&DiretoriodeDados\DPAIND04.IGD" )
      ENDIF
      DBSetOrder( 1 )

      FOR nCt := 1 TO LEN( aMoedas )
         IF aMoedas [ nCt ][ 2 ] > 0 


            fGravaMoeda( aMoedas [ nCt ][ 1 ],  aMoedas [ nCt ][ 2 ],  nCliCodigo, cCliDescri, nCt, nPerAcrDes, cAcrDes )
         ENDIF
      NEXT

      DBCloseArea()

   Return Nil




   Function fGravaMoeda( nCodigo, nValor, nCliCodigo, cCliDescri, nCt,  nPerAcrDes, cAcrDes )

      DBAppend()

      IF RLock()
         nCodCli:= 0
         IF( nPerAcrDes > 0)
            IF( cAcrDes == "A" )
               cTmp := " (ACRESC)"
            ELSE
               cTmp := " (DESC)"
            ENDIF
         ELSE
            cTmp := ""
         ENDIF












         _FIELD->CODNF_ := VAL( Str( CodigoCaixa, 3, 0 ) + NumeroCupom() ); _FIELD->DUPL__ := VAL( Str( CodigoCaixa, 3, 0 ) + NumeroCupom() ); _FIELD->LETRA_ := Chr( nCt + 64 ); _FIELD->PERC__ := nPerAcrDes; _FIELD->VLR___ := nValor; _FIELD->TIPO__ := "03"; _FIELD->DATAEM := DATE(); _FIELD->FUNC__ := CodigoCaixa; _FIELD->OBS___ := DTOC(DATE()) + "|" + TIME() + "/" +  StrZero( CodigoCaixa, 3, 0 ) + cTmp; _FIELD->CLIENT := nCliCodigo; _FIELD->CDESCR := cCliDescri; _FIELD->LOCAL_ := nCodigo ;IIF( FIELDPOS( "FILIAL" ) > 0, IF( _FIELD->FILIAL==0, _FIELD->FILIAL:= CodigoFilial, Nil ), Nil )
      ENDIF

   Return Nil



Function SWSnapCopy( nX0, nY0, nX1, nY1, nModo, cFile )
cFile:= IF( cFile==Nil, "PDV_RES.$$$", cFile )
PicWrite( nX0, nY0, nX1, nY1, 1, cFile )
Return cFile



Function SWSnapPaste( nX0, nY0, cImagem )
PicRead( nX0, nY0, 1, cImagem )
Return .T.



Function SWSnapKill()
Return Nil



   Function fDepur (cArq, cTex, lNovo)

      IIF (lNovo == NIL, lNovo == .F., NIL)

      IF (FILE (cArq) == .F. .OR. lNovo == .T.)
         cTmp := ""
         cDat := DTOC (DATE ()) + " " + TIME ()
      ELSE
         cTmp := MEMOREAD (cArq)
         cDat := ""
      ENDIF

      cPro := Left (Alltrim (ProcName (1)) + Space (12), 12)
      cLin := Str (ProcLine (1), 6)


      MEMOWRIT (cArq, cTmp + cPro + " " + cLin + " : " + cTex + " " + cDat +  CHR (13) + CHR (10))

   Return (.T.)












   Function PrecoConvertido( nPrecoBase )
   Local nPrecoPadrao, nPrecoFinal
   IF !nPrecoBase == Nil
      nPrecoPadrao:= nPrecoBase
   ELSE
      nPrecoPadrao:= MPR->PRECOV
      IF TabelaComposta()
         nPrecoPadrao:= PrecoTabela()
      ENDIF
   ENDIF
   nPrecoFinal:= nPrecoPadrao + ( ( nPrecoPadrao  * PRE->PERACR ) / 100 )
   nPrecoFinal:= nPrecoFinal  - ( ( nPrecoFinal   * PRE->PERDES ) / 100 )
   IF MPR->PERCDC > 0
      nPrecoFinal:= nPrecoFinal - ( ( nPrecoFinal * MPR->PERCDC ) / 100 )
   ENDIF


   Return nPrecoFinal











   Function TabelaComposta()
   TAX->( DBSetOrder( 1 ) )

   IF TAX->( DBSeek( PRE->CODIGO ) )
      Return .T.
   ENDIF
   Return .F.













   Function PrecoTabela()
   TAX->( DBSetOrder( 2 ) )
   IF TAX->( DBSeek( MPR->INDICE ) )


      WHILE TAX->CODPRO == MPR->INDICE
         IF TAX->CODIGO == PRE->CODIGO
            Return TAX->PRECOV
         ENDIF
         TAX->( DBSkip() )
      ENDDO
   ENDIF
   Return MPR->PRECOV


   Function MudaTabela()
   Local nArea:= Select()
   Local oTb, cBusca:= "", nColor := SetColor ()
   Local nSaveFP:= SWSnapCopy( 50, 100, 1260, 900, 0, "PDVPRECO.$$$" )

      IF (CorPadrao == "CINZA")
         SetColor( "08/15,01/15,00/03,00/07" ) 
      ELSE
         SetColor( "08/15,01/15,00/07,00/07" ) 
      ENDIF

      DBSelectAr( 25 )
      DBSetOrder( 2 )
      DBGotop()
      SWGBox( 220, 220, 1250, 800, "Pesquisa as Tabelas de Preco", 15 )
      Mensagem()
      oTB:=TBrowseDB( 10, 15, 23, 70 )
      oTB:AddColumn( TBColumnNew(, {|| StrZero( pre->CODIGO, 3, 0 ) + " - " + Left( pre->DESCRI, 45 ) + Space( 30 ) } ) )
      oTB:AUTOLITE:=.F.
      oTB:DehiLite()

      oTb:RefreshAll()
      WHILE !oTB:Stabilize()
      ENDDO

      WHILE .T.
          oTB:colorrect({oTB:ROWPOS,1,oTB:ROWPOS,1},{3,1})
          WHILE !oTb:Stabilize()
          ENDDO

          IF !( cBusca == "" )
             Mensagem( "Pesquisa " + cBusca )
          ELSE
             Mensagem( pre->DESCRI )
          ENDIF
          nTecla:=inkey(0)

          IF !UPPER( Chr( nTecla ) ) $ "ABCDEFGHIJKLMNOPQRSTUVXYZW0123456789 &"
             cBusca:= ""
          ENDIF
          If nTecla=27
             exit
          EndIf
          do case
             CASE nTecla==5         ;oTB:up()
             CASE nTecla==19       ;oTB:up()
             CASE nTecla==4      ;oTB:down()
             CASE nTecla==24       ;oTB:down()
             CASE nTecla==18       ;oTB:pageup()
             CASE nTecla==3       ;oTB:pagedown()
             CASE nTecla==31  ;oTB:gotop()
             CASE nTecla==30  ;oTB:gobottom()
             CASE UPPER( Chr( nTecla ) ) $ "ABCDEFGHIJKLMNOPQRSTUVXYZW0123456789 &"
                  IF Chr( nTecla ) $ "0123456789"
                     DBSetOrder( 1 )
                  ELSE
                     DBSetOrder( 2 )
                  ENDIF
                  cBusca:= cBusca + UPPER( Chr( nTecla ) )
                  IF IndexOrd()==2
                     DBSeek( UPPER( cBusca ), .T. )
                  ELSE
                     DBSeek( VAL( cBusca ) )
                  ENDIF
                  oTb:RefreshAll()
                  WHILE !oTb:Stabilize()
                  ENDDO
             CASE nTecla==13
                  TabelaDePreco:= CODIGO
                  Exit

             OTHERWISE                ;tone(125); tone(300)
         ENDCASE
         oTB:refreshcurrent()
         oTB:stabilize()
      ENDDO
      DBSelectAr( nArea )
      SWSnapPaste( 50, 100, nSaveFP )
      SWSnapKill( nSaveFP )
      SetColor( nColor )
      Return .T.


Function AbreFile( nCodigoArquivo )
DO CASE
   CASE nCodigoArquivo==13
       DBSelectAr( 13 )
       IF !Used()
          dbUseArea( .F., "DBFNTX", "&DiretorioDeDados\CLIENTES.VPB", "CLI", if(.T. .OR. .F., !.F., NIL), .F. )


          IF !File( DiretorioDeDados-"\CLIIND01.IGD" ) .OR.  !File( DiretorioDeDados-"\CLIIND02.IGD" ) .OR.  !File( DiretorioDeDados-"\CLIIND03.IGD" )


             ordCondSet(,,,, {|| .T. },, RECNO(),,,, ) ; ordCreate("&DiretorioDeDados\CLIIND01.IGD", "CLIX1", "CODIGO", {|| CODIGO}, )


             ordCondSet(,,,, {|| .T. },, RECNO(),,,, ) ; ordCreate("&DiretorioDeDados\CLIIND02.IGD", "CLIX2", "Upper(Descri)", {|| Upper(Descri)}, )


             ordCondSet(,,,, {|| .T. },, RECNO(),,,, ) ; ordCreate("&DiretorioDeDados\CLIIND03.IGD", "CLIX3", "FANTAS", {|| FANTAS}, )
          ENDIF



          if !.F. ; ordListClear() ; end; ordListAdd( "&DiretoriodeDados\CLIIND01.IGD" ); ordListAdd( "&DiretoriodeDados\CLIIND02.IGD" ); ordListAdd( "&DiretoriodeDados\CLIIND03.IGD" ); ordListAdd( "&DiretoriodeDados\CLIIND04.IGD" )
       ENDIF
ENDCASE
